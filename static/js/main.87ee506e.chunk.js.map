{"version":3,"sources":["svgs/logo.svg","components/App.tsx","js/utils/windowUtils.ts","environments/config.ts","js/zoomAuth/zoomAuth.ts","index.tsx"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","windowUtils","urlParamKey","regExp","RegExp","matchArray","decodeURIComponent","window","location","search","match","length","replace","config","host","CLOUD_FUNCTION_ENDPOINT","Error","zoomAuth","initialize","tokenDataString","JSON","parse","expiresAt","access_token","token_type","refresh_token","expires_in","scope","getUser","a","fetch","encodeURIComponent","stringify","cachedZoomTokenData","response","json","responseJson","user","console","log","ReactDOM","render","document","getElementById","run"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,iMCyB5BC,G,MArBO,WACpB,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,6CADP,0BAGA,uBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,mBCZKC,EACE,SAACC,GACZ,IAAMC,EAAS,IAAIC,OAAOF,EAAc,cAAe,KAEjDG,EADwBC,mBAAmBC,OAAOC,SAASC,QACxBC,MAAMP,GAC/C,OAAIE,GAAcA,EAAWM,OACRN,EAAW,GACZO,QAAQV,EAAc,IAAK,IAAIU,QAAQ,IAAK,IAEvD,MCTAC,EAAS,WAQpB,OAAQN,OAAOC,SAASM,MACtB,IAAK,iBACH,MATQ,CACVC,wBAAyB,yBASzB,IAAK,wBACH,MARe,CACjBA,wBACE,8DAOF,QACE,MAAM,IAAIC,MAAJ,8BAAiCT,OAAOC,SAASM,SCAhDG,EAAW,CACtBC,WAAY,WACV,IAAMC,EAAkBlB,EAAwB,mBAChD,OAAIkB,EACqCC,KAAKC,MAC1Cf,mBAAmBa,KAIrBZ,OAAOC,SAASV,KACde,IAASE,wBAA0B,oBAC9B,CACLO,UAAW,EACXC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfC,WAAY,EACZC,MAAO,MAIbC,QAAQ,WAAD,2BAAE,8BAAAC,EAAA,2DACQ,kCADR,SAEgBC,MACrBjB,IAASE,wBAAT,iCAFa,kCAEb,0BACoDgB,mBAChDX,KAAKY,UAAUC,MALd,cAEDC,EAFC,gBAQoBA,EAASC,OAR7B,cAQDC,EARC,yBASAA,GATA,yCAAF,kDAAC,IAaJH,EAA2ChB,EAASC,a,2CC1C1D,4BAAAW,EAAA,qEACqBZ,EAASW,UAD9B,OACQS,EADR,OAEEC,QAAQC,IAAI,YAAaF,GACzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAHnD,0C,0DAMAC,K","file":"static/js/main.87ee506e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"../svgs/logo.svg\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload...\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","export const windowUtils = {\n  getUrlParam: (urlParamKey: string): string | null => {\n    const regExp = new RegExp(urlParamKey + \"=(.*?)($|&)\", \"g\");\n    const decodedWindowLocation = decodeURIComponent(window.location.search);\n    const matchArray = decodedWindowLocation.match(regExp);\n    if (matchArray && matchArray.length) {\n      const firstMatch = matchArray[0];\n      return firstMatch.replace(urlParamKey + \"=\", \"\").replace(\"&\", \"\");\n    } else {\n      return null;\n    }\n  },\n};\n","export const config = () => {\n  const dev = {\n    CLOUD_FUNCTION_ENDPOINT: \"http://localhost:8080\",\n  };\n  const production = {\n    CLOUD_FUNCTION_ENDPOINT:\n      \"https://us-central1-project-coco-251813.cloudfunctions.net\",\n  };\n  switch (window.location.host) {\n    case \"localhost:3006\":\n      return dev;\n    case \"solomonlake.github.io\":\n      return production;\n    default:\n      throw new Error(`unknown window host:${window.location.host}`);\n  }\n};\n","import { windowUtils } from \"../utils/windowUtils\";\nimport { config } from \"../../environments/config\";\nimport { ONE_MINUTE } from \"../constants/timesInMilliseconds\";\n\nexport type CachedZoomTokenData = {\n  expiresAt: number;\n\n  access_token: string;\n  token_type: string;\n  refresh_token: string;\n  expires_in: number;\n  scope: string;\n};\n\nexport const zoomAuth = {\n  initialize: (): CachedZoomTokenData => {\n    const tokenDataString = windowUtils.getUrlParam(\"zoom_token_data\");\n    if (tokenDataString) {\n      const tokenData: CachedZoomTokenData = JSON.parse(\n        decodeURIComponent(tokenDataString),\n      );\n      return tokenData;\n    } else {\n      window.location.href =\n        config().CLOUD_FUNCTION_ENDPOINT + \"/zoomGetTokenData\";\n      return {\n        expiresAt: 0,\n        access_token: \"\",\n        token_type: \"\",\n        refresh_token: \"\",\n        expires_in: 0,\n        scope: \"\",\n      };\n    }\n  },\n  getUser: async () => {\n    const apiUrl = \"https://api.zoom.us/v2/users/me\";\n    const response = await fetch(\n      config().CLOUD_FUNCTION_ENDPOINT +\n        `/zoomApiProxy?endPoint=${apiUrl}&zoomTokenData=${encodeURIComponent(\n          JSON.stringify(cachedZoomTokenData),\n        )}`,\n    );\n    const responseJson = await response.json();\n    return responseJson;\n  },\n};\n\nconst cachedZoomTokenData: CachedZoomTokenData = zoomAuth.initialize();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { zoomAuth } from \"./js/zoomAuth/zoomAuth\";\n\nasync function run() {\n  const user = await zoomAuth.getUser();\n  console.log(\"zoom user\", user);\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nrun();\n"],"sourceRoot":""}