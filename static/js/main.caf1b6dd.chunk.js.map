{"version":3,"sources":["components/Loading/Loading.tsx","components/appStore.ts","components/JoinGroup/joinGroupStore.ts","scripts/config/config.ts","scripts/firestore/firestoreInitialize.ts","scripts/firestore/firestoreApi.ts","scripts/utils/generateUtils.ts","scripts/databaseServices/appGroupsDatabaseAccessor.ts","scripts/databaseServices/usersDatabaseAccessor.ts","scripts/databaseServices/databaseService.ts","components/JoinGroup/JoinGroup.tsx","components/MainGroup/mainGroupStore.ts","scripts/gapi/ensureGapiClient.ts","scripts/gapi/gapiCalendar.ts","components/MainGroup/mainGroupActionCreator.ts","components/MainGroup/components/UserAvatarNameRow.tsx","components/MainGroup/components/MainGroupHeader.tsx","components/MainGroup/components/MainGroupFooter.tsx","components/MainGroup/components/calendarUiUtils.ts","components/MainGroup/MainGroup.tsx","components/appGroupObserver.ts","scripts/constants/timesInMilliseconds.ts","scripts/utils/windowUtils.ts","scripts/zoom/zoomAuth.ts","scripts/environment/environment.ts","scripts/login/login.ts","components/App.tsx","theme.ts","index.tsx"],"names":["Loading","Grid","container","direction","justify","alignItems","spacing","item","Typography","initialState","view","reducer","state","action","console","log","type","newState","newAppState","AppStoreContext","React","createContext","joinId","newJoinId","config","_config","Error","firestoreDb","_firestoreDb","initializeFirestore","customToken","a","async","firebase","initializeApp","apiKey","FIRESTORE_API_KEY","authDomain","FIRESTORE_AUTH_DOMAIN","projectId","FIRESTORE_PROJECT_ID","auth","signInWithCustomToken","catch","error","code","message","firestore","firestoreApiFactory","collection","get","documentPath","docRef","doc","exists","data","set","entry","update","delete","watch","callback","onSnapshot","generateRandomString","n","possible","text","i","charAt","Math","floor","random","length","appGroupsDatabaseApi","appGroupsDatabaseAccessor","watchAppGroup","appGroupId","getAppGroup","getExistingAppGroup","existingGroup","deleteAppGroup","createAppGroup","appGroup","createNewAppGroup","firstUser","newAppGroup","userIds","userId","lastOnline","Date","now","availabilityStatus","currentMeeting","dailyCalendarEvents","userJoinExistingAppGroup","user","groupId","appGroupUser","updateGroupAccessor","removeUserFromAppGroup","FieldValue","setUserCalendarEvents","calendarEvents","sendAlivePing","usersDatabaseApi","usersDatabaseAccessor","getUser","createUser","findOrCreateUser","id","existingUser","userEntry","displayName","first_name","last_name","personalMeetingUrl","personal_meeting_url","avatarUrl","pic_url","updateGroup","databaseService","newGroup","group","_","values","JoinGroup","props","appStore","useContext","joinGroupStore","useReducer","dispatch","useJoinGroupStore","TextField","label","margin","variant","value","onChange","e","target","Button","color","onClick","appState","initialAppGroup","Divider","logState","lastCheckForMeetingUIUpdate","_gapiClientLoaded","gapiCalendar","gapi","client","Promise","resolve","reject","load","initConfig","GOOGLE_CALENDAR_API_KEY","clientId","GOOGLE_AUTH_CLIENT_ID","discoveryDocs","scope","init","authInstance","auth2","getAuthInstance","isSignedIn","signIn","gapiClient","calendar","events","list","calendarId","timeMin","toISOString","showDeleted","singleEvents","maxResults","orderBy","response","eventsResult","result","items","map","startTime","start","dateTime","date","summary","mainGroupActionCreator","convertGapiCalendarEventToCalendarEvent","gapiCalendarEvent","eventName","endTime","end","eventLink","htmlLink","UserAvatarNameRow","mainGroupStore","useState","getNextMeetingTimeString","nextMeetingTimeString","updateNextMeetingTimeString","useEffect","updateMeetingTimeInterval","setInterval","clearInterval","Avatar","alt","src","currentUser","currentDateObj","currentTimeNum","getTime","currentDateString","toDateString","nextMeeting","filter","m","meetingEndsInTheFuture","localStartTimeDate","localStartTime","localEndTime","meetingStartedInThePast","startTimeString","toLocaleTimeString","slice","endTimeString","MainGroupHeader","MainGroupFooter","getCurrentCalendarEvent","localStartTimeNum","MainGroup","useMainGroupStore","calendarSyncInterval","appGroupdId","firebaseAlivePingInterval","unsubscribe","meetingsUiUpdateInterval","meetingsUi","currentTime","offlineUsers","reduce","gatheredOfflineUsers","KEEP_ALIVE_PING_INTERVAL","videoMeetings","gatheredVideoMeetings","userVideoMeeting","existingMeeting","meetingId","existingMeetingUsers","users","meeting","calendarMeetings","gatheredCalendarMeetings","userIsNotOffline","currentCalendarEvent","existingCalendarEvent","existingCalendarEventUsers","availableUsers","gatheredAvailableUsers","userDoesntHaveCurrentVideoMeeting","userDoesntHaveCurrentCalendarEvent","userStatusIsAvailable","busyUsers","gatheredBusyUsers","userStatusIsBusy","offline","video","available","busy","computeMeetingsUi","style","width","videoMeeting","meetingName","cachedZoomTokenData","windowUtils","urlParamKey","regExp","RegExp","matchArray","decodeURIComponent","window","location","search","match","replace","environment","host","CLOUD_FUNCTION_ENDPOINT","zoomAuth","initialize","_reject","tokenDataString","tokenData","JSON","parse","history","pushState","document","title","origin","pathname","href","getToken","login","fetch","encodeURIComponent","stringify","json","responseJson","AppContent","useAppStore","userAndCustomToken","c","Provider","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","Container","maxWidth","marginTop","getElementById"],"mappings":"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","file":"static/js/main.caf1b6dd.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const Loading = () => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Typography>Loading</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import { AppAction } from \"./appActions\";\nimport { AppState } from \"./appState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type AppStore = {\n  state: AppState;\n  dispatch: Dispatch<AppAction>;\n};\n\nconst initialState: AppState = { view: \"initial\" };\n\nfunction reducer(state: AppState, action: AppAction) {\n  console.log(\"appStoreReducer previous state:\", state);\n  console.log(\"appStoreReducer\", action);\n  switch (action.type) {\n    case \"TRANSITION_APP_STATE\": {\n      return logState(action.newAppState);\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: AppState) {\n  console.log(\"appStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const AppStoreContext = React.createContext<AppStore>(null as any);\n\nexport function useAppStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","import { JoinGroupAction } from \"./joinGroupAction\";\nimport { JoinGroupState } from \"./joinGroupState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type JoinGroupStore = {\n  state: JoinGroupState;\n  dispatch: Dispatch<JoinGroupAction>;\n};\n\nconst initialState: JoinGroupState = { joinId: \"\" };\n\nfunction reducer(state: JoinGroupState, action: JoinGroupAction) {\n  console.log(\"joinGroupStoreReducer previous state:\", state);\n  console.log(\"joinGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_JOIN_ID\": {\n      return logState({\n        ...state,\n        joinId: action.newJoinId,\n      });\n      break;\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: JoinGroupState) {\n  console.log(\"joinGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const JoinGroupStoreContext = React.createContext<JoinGroupStore>(\n  null as any,\n);\n\nexport function useJoinGroupStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","import { AppConfig } from \"../../../sharedTypes/appConfigTypes\";\n\nexport function setConfig(c: AppConfig) {\n  _config = c;\n}\n\nexport function config(): AppConfig {\n  if (_config) {\n    return _config;\n  } else {\n    throw new Error(\"config not initialized\");\n  }\n}\n\nlet _config: AppConfig | null = null;\n","import firebase from \"firebase\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { config } from \"../config/config\";\n\nexport function firestoreDb() {\n  if (_firestoreDb) {\n    return _firestoreDb;\n  } else {\n    throw new Error(\"firestoreDb not initialized\");\n  }\n}\n\nexport async function initializeFirestore(customToken: string) {\n  firebase.initializeApp({\n    apiKey: config().FIRESTORE_API_KEY,\n    authDomain: config().FIRESTORE_AUTH_DOMAIN,\n    projectId: config().FIRESTORE_PROJECT_ID,\n  });\n  await firebase\n    .auth()\n    .signInWithCustomToken(customToken)\n    .catch(function(error) {\n      const { code, message } = error;\n      console.log(\"firestoreInitialize error\", code, message);\n      throw error;\n    });\n\n  _firestoreDb = firebase.firestore();\n}\n\nlet _firestoreDb: firebase.firestore.Firestore | null = null;\n","import { firestoreDb } from \"./firestoreInitialize\";\nimport { DatabaseCollection } from \"../databaseServices/databaseTypes\";\nimport { async } from \"q\";\n\nexport const firestoreApiFactory = <T extends {}>(\n  collection: DatabaseCollection,\n) => {\n  return {\n    get: async (documentPath: string): Promise<T | null> => {\n      const docRef = firestoreDb()\n        .collection(collection)\n        .doc(documentPath);\n\n      const doc = await docRef.get();\n      if (doc.exists) {\n        return doc.data() as T;\n      } else {\n        return null;\n      }\n    },\n    set: async (documentPath: string, entry: T): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .set(entry);\n    },\n    update: async (\n      documentPath: string,\n      entry: Partial<T | {}>,\n    ): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .update(entry);\n    },\n    delete: async (documentPath: string) => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .delete();\n    },\n    watch: (documentPath: string, callback: (entry: T) => void) => {\n      return firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .onSnapshot(doc => {\n          callback(doc.data() as T);\n        });\n    },\n  };\n};\n","//from http://stackoverflow.com/a/1349426/439317\nexport function generateRandomString(n: number, possible: string) {\n  var text = \"\";\n  for (var i = 0; i < n; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\nexport function generateRandomAlphaNumericString(n: number) {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomUrlCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomLetterNumericCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript?page=1&tab=votes#tab-top\nexport function uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { UserEntry } from \"./../../../sharedTypes/userEntry.d\";\nimport {\n  AppGroupEntry,\n  CalendarMeeting,\n  AppGroupUser,\n} from \"./../../../sharedTypes/appGroupEntry.d\";\nimport firebase from \"firebase\";\nimport { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { generateRandomAlphaNumericString } from \"../utils/generateUtils\";\n\nconst appGroupsDatabaseApi = firestoreApiFactory<AppGroupEntry>(\"appGroups\");\n\nexport const appGroupsDatabaseAccessor = {\n  watchAppGroup: (\n    appGroupId: string,\n    callback: (appGroup: AppGroupEntry) => void,\n  ) => {\n    return appGroupsDatabaseApi.watch(appGroupId, callback);\n  },\n  getAppGroup: async (appGroupId: string): Promise<AppGroupEntry | null> => {\n    return await appGroupsDatabaseApi.get(appGroupId);\n  },\n  getExistingAppGroup: async (appGroupId: string): Promise<AppGroupEntry> => {\n    const existingGroup = await appGroupsDatabaseApi.get(appGroupId);\n    if (existingGroup) {\n      return existingGroup;\n    } else {\n      throw new Error(\n        \"getExistingAppGroup: group doesn't exist with id:\" + appGroupId,\n      );\n    }\n  },\n  deleteAppGroup: async (appGroupId: string) => {\n    return await appGroupsDatabaseApi.delete(appGroupId);\n  },\n  createAppGroup: async (appGroup: AppGroupEntry) => {\n    return await appGroupsDatabaseApi.set(appGroup.appGroupId, appGroup);\n  },\n  createNewAppGroup: async (firstUser: UserEntry) => {\n    const newAppGroup: AppGroupEntry = {\n      appGroupId: \"g\" + generateRandomAlphaNumericString(5),\n      userIds: {\n        [firstUser.userId]: {\n          ...firstUser,\n          userId: firstUser.userId,\n          lastOnline: Date.now(),\n\n          availabilityStatus: \"available\",\n          currentMeeting: null,\n          dailyCalendarEvents: [],\n        },\n      },\n    };\n    await appGroupsDatabaseApi.set(newAppGroup.appGroupId, newAppGroup);\n    return newAppGroup;\n  },\n  userJoinExistingAppGroup: async (user: UserEntry, groupId: string) => {\n    const appGroupUser: AppGroupUser = {\n      ...user,\n      userId: user.userId,\n      lastOnline: Date.now(),\n      availabilityStatus: \"available\",\n      currentMeeting: null,\n      dailyCalendarEvents: [],\n    };\n    const updateGroupAccessor = {\n      [`userIds.${user.userId}`]: appGroupUser,\n    };\n    appGroupsDatabaseApi.update(groupId, updateGroupAccessor);\n    return appGroupsDatabaseAccessor.getExistingAppGroup(groupId);\n  },\n  removeUserFromAppGroup: async (appGroup: AppGroupEntry, user: UserEntry) => {\n    await appGroupsDatabaseApi.update(appGroup.appGroupId, {\n      [`userIds.${user.userId}`]: firebase.firestore.FieldValue.delete(),\n    });\n  },\n  setUserCalendarEvents(\n    userId: string,\n    appGroupId: string,\n    calendarEvents: Array<CalendarMeeting>,\n  ) {\n    const updateGroupAccessor = {\n      [`userIds.${userId}.dailyCalendarEvents`]: calendarEvents,\n    };\n    appGroupsDatabaseApi.update(appGroupId, updateGroupAccessor);\n  },\n  sendAlivePing: (userId: string, appGroupId: string) => {\n    const updateGroupAccessor = {\n      [`userIds.${userId}.lastOnline`]: Date.now(),\n    };\n    appGroupsDatabaseApi.update(appGroupId, updateGroupAccessor);\n  },\n};\n","import { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { ZoomUser } from \"../../../sharedTypes/zoomTypes\";\nimport { UserEntry } from \"../../../sharedTypes/userEntry\";\n\nconst usersDatabaseApi = firestoreApiFactory<UserEntry>(\"users\");\n\nexport const usersDatabaseAccessor = {\n  getUser: async (userId: string): Promise<UserEntry | null> => {\n    return await usersDatabaseApi.get(userId);\n  },\n  createUser: async (user: UserEntry) => {\n    return await usersDatabaseApi.set(user.userId, user);\n  },\n  findOrCreateUser: async (user: ZoomUser): Promise<UserEntry> => {\n    const existingUser = await usersDatabaseAccessor.getUser(user.id);\n    if (existingUser) {\n      return existingUser;\n    } else {\n      const userEntry = {\n        userId: user.id,\n        groupId: null,\n        displayName: user.first_name + \" \" + user.last_name,\n        personalMeetingUrl: user.personal_meeting_url,\n        avatarUrl: user.pic_url,\n      };\n      await usersDatabaseApi.set(userEntry.userId, userEntry);\n      return userEntry;\n    }\n  },\n  updateGroup: async (userId: string, groupId: string | null) => {\n    await usersDatabaseApi.update(userId, { groupId });\n  },\n};\n","import { AppGroupEntry } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { appGroupsDatabaseAccessor } from \"./appGroupsDatabaseAccessor\";\nimport { usersDatabaseAccessor } from \"./usersDatabaseAccessor\";\nimport _ from \"underscore\";\nimport { UserEntry } from \"../../../sharedTypes/userEntry\";\n\nexport const databaseService = {\n  createGroup: async (user: UserEntry): Promise<AppGroupEntry> => {\n    const newGroup = await appGroupsDatabaseAccessor.createNewAppGroup(user);\n    await usersDatabaseAccessor.updateGroup(user.userId, newGroup.appGroupId);\n    return newGroup;\n  },\n  userTryJoinGroup: async (\n    user: UserEntry,\n    groupId: string,\n  ): Promise<AppGroupEntry | null> => {\n    const existingGroup = await appGroupsDatabaseAccessor.getAppGroup(groupId);\n    if (existingGroup) {\n      const group = await appGroupsDatabaseAccessor.userJoinExistingAppGroup(\n        user,\n        groupId,\n      );\n      await usersDatabaseAccessor.updateGroup(user.userId, groupId);\n      return group;\n    } else {\n      return null;\n    }\n  },\n  userLeaveGroup: async (user: UserEntry, appGroup: AppGroupEntry) => {\n    await usersDatabaseAccessor.updateGroup(user.userId, null);\n    await appGroupsDatabaseAccessor.removeUserFromAppGroup(appGroup, user);\n    const group = await appGroupsDatabaseAccessor.getAppGroup(\n      appGroup.appGroupId,\n    );\n    if (group && group.userIds && _.values(group.userIds).length === 0) {\n      // no users left in group\n      await appGroupsDatabaseAccessor.deleteAppGroup(group.appGroupId);\n    }\n  },\n};\n","import React, { useContext } from \"react\";\nimport logo from \"../../svgs/logo.svg\";\nimport { AppStoreContext } from \"../appStore\";\nimport { useJoinGroupStore } from \"./joinGroupStore\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { databaseService } from \"../../scripts/databaseServices/databaseService\";\nimport { JoinGroupAppState } from \"../appState\";\n\nexport const JoinGroup = (props: { appState: JoinGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const joinGroupStore = useJoinGroupStore();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <TextField\n              label=\"Group Id\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={joinGroupStore.state.joinId}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                joinGroupStore.dispatch({\n                  type: \"UPDATE_JOIN_ID\",\n                  newJoinId: e.target.value,\n                });\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                appStore.dispatch({\n                  type: \"TRANSITION_APP_STATE\",\n                  newAppState: { view: \"loading\" },\n                });\n                const group = await databaseService.userTryJoinGroup(\n                  props.appState.user,\n                  joinGroupStore.state.joinId,\n                );\n                if (group) {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: {\n                      view: \"mainGroup\",\n                      user: {\n                        ...props.appState.user,\n                        groupId: group.appGroupId,\n                      },\n                      initialAppGroup: group,\n                    },\n                  });\n                } else {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: props.appState,\n                  });\n                  // group doesn't exist effect\n                  console.log(\"group doesn't exist\");\n                }\n              }}\n            >\n              Join\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={async () => {\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: { view: \"loading\" },\n            });\n            const group = await databaseService.createGroup(\n              props.appState.user,\n            );\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: {\n                view: \"mainGroup\",\n                user: { ...props.appState.user, groupId: group.appGroupId },\n                initialAppGroup: group,\n              },\n            });\n          }}\n        >\n          Create Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import { MainGroupAction } from \"./mainGroupAction\";\nimport React, { Dispatch, useReducer } from \"react\";\nimport {\n  AppGroupEntry,\n  VideoMeeting,\n  CalendarMeeting,\n} from \"./../../../sharedTypes/appGroupEntry.d\";\n\nexport type MainGroupState = {\n  appGroup: AppGroupEntry;\n  lastCheckForMeetingUIUpdate: number;\n};\n\nexport type MainGroupStore = {\n  state: MainGroupState;\n  dispatch: Dispatch<MainGroupAction>;\n};\n\nfunction reducer(state: MainGroupState, action: MainGroupAction) {\n  console.log(\"mainGroupStoreReducer previous state:\", state);\n  console.log(\"mainGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_APP_GROUP\":\n      return logState({\n        ...state,\n        appGroup: action.newAppGroup,\n      });\n    case \"CHECK_FOR_MEETINGS_UI_UPDATE\":\n      return logState({\n        ...state,\n        lastCheckForMeetingUIUpdate: Date.now(),\n      });\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n}\nfunction logState(newState: MainGroupState) {\n  console.log(\"mainGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const MainGroupStoreContext = React.createContext<MainGroupStore>(\n  null as any,\n);\n\nexport function useMainGroupStore(appGroup: AppGroupEntry) {\n  const [state, dispatch] = useReducer(reducer, {\n    appGroup,\n    lastCheckForMeetingUIUpdate: 0,\n  });\n  return { state, dispatch };\n}\n","import { config } from \"../config/config\";\n\nexport async function ensureGapiClient(): Promise<typeof gapi.client> {\n  if (_gapiClientLoaded) {\n    await _gapiClientLoaded;\n    return gapi.client;\n  } else {\n    _gapiClientLoaded = initClient();\n    await _gapiClientLoaded;\n    return gapi.client;\n  }\n}\n\nasync function initClient(): Promise<void> {\n  await new Promise((resolve, reject) => {\n    gapi.load(\"client:auth2\", {\n      callback: async () => {\n        const initConfig = {\n          apiKey: config().GOOGLE_CALENDAR_API_KEY,\n          clientId: config().GOOGLE_AUTH_CLIENT_ID,\n          discoveryDocs: [\n            \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n          ],\n          scope: \"https://www.googleapis.com/auth/calendar.events.readonly\",\n        };\n        await gapi.client.init(initConfig);\n\n        const authInstance = gapi.auth2.getAuthInstance();\n        const notSignedIn = !authInstance.isSignedIn.get();\n        if (notSignedIn) {\n          await authInstance.signIn();\n        }\n        resolve();\n      },\n    });\n  });\n}\n\nlet _gapiClientLoaded: Promise<void> | null = null;\n","import { ensureGapiClient } from \"./ensureGapiClient\";\n\nexport const gapiCalendar = {\n  listUpcomingEvents: async (): Promise<Array<gapi.client.calendar.Event>> => {\n    const gapiClient = await ensureGapiClient();\n    const response = await gapiClient.calendar.events.list({\n      calendarId: \"primary\",\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: \"startTime\",\n    });\n\n    const eventsResult: gapi.client.calendar.Events = response.result;\n    const events = eventsResult.items || [];\n    console.log(\"Upcoming events:\");\n    events.map(e => {\n      const startTime = e.start ? e.start.dateTime || e.start.date : null;\n      console.log(e.summary + \" (\" + startTime + \")\");\n    });\n    return events;\n  },\n};\n","import { CalendarMeeting } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { gapiCalendar } from \"./../../scripts/gapi/gapiCalendar\";\nimport { appGroupsDatabaseAccessor } from \"../../scripts/databaseServices/appGroupsDatabaseAccessor\";\n\nexport const mainGroupActionCreator = {\n  syncCalendarEvents: async (userId: string, appGroupId: string) => {\n    const events: Array<\n      gapi.client.calendar.Event\n    > = await gapiCalendar.listUpcomingEvents();\n    const calendarEvents = events.map(convertGapiCalendarEventToCalendarEvent);\n    appGroupsDatabaseAccessor.setUserCalendarEvents(\n      userId,\n      appGroupId,\n      calendarEvents,\n    );\n  },\n};\n\nfunction convertGapiCalendarEventToCalendarEvent(\n  gapiCalendarEvent: gapi.client.calendar.Event,\n): CalendarMeeting {\n  const id = gapiCalendarEvent.id;\n  const eventName = gapiCalendarEvent.summary;\n  const startTime = gapiCalendarEvent.start\n    ? gapiCalendarEvent.start.dateTime || gapiCalendarEvent.start.date\n    : null;\n  const endTime = gapiCalendarEvent.end\n    ? gapiCalendarEvent.end.dateTime || gapiCalendarEvent.end.date\n    : null;\n  const eventLink = gapiCalendarEvent.htmlLink;\n  if (id && eventName && startTime && endTime && eventLink) {\n    return {\n      id,\n      eventName,\n      startTime,\n      endTime,\n      eventLink,\n    };\n  } else {\n    console.log(\"gapi calendar event\", gapiCalendarEvent);\n    throw new Error(\"gapi calendar event is missing properties\");\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport { Grid, Typography, Button, Divider, Avatar } from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { mainGroupActionCreator } from \"../mainGroupActionCreator\";\nimport { UserEntry } from \"../../../../sharedTypes/userEntry\";\nimport { AppStore } from \"../../appStore\";\nimport { databaseService } from \"../../../scripts/databaseServices/databaseService\";\nimport {\n  CalendarMeeting,\n  AppGroupUser,\n} from \"../../../../sharedTypes/appGroupEntry\";\nimport { InlineFunction } from \"../../generic/InlineFunction\";\nimport theme from \"../../../theme\";\n\nconst NOT_SYNCED_MESSAGE = \"Calendar not synced\";\nconst NO_UPCOMING_EVENTS_MESSAGE = \"No upcoming events\";\n\nexport const UserAvatarNameRow = (props: {\n  mainGroupStore: MainGroupStore;\n  user: AppGroupUser;\n  currentUser: boolean;\n}) => {\n  const dailyCalendarEvents =\n    props.mainGroupStore.state.appGroup.userIds[props.user.userId]\n      .dailyCalendarEvents;\n  const [nextMeetingTimeString, updateNextMeetingTimeString] = useState(\n    getNextMeetingTimeString(dailyCalendarEvents),\n  );\n\n  React.useEffect(() => {\n    // component mount\n\n    updateNextMeetingTimeString(getNextMeetingTimeString(dailyCalendarEvents));\n    const updateMeetingTimeInterval = setInterval(() => {\n      updateNextMeetingTimeString(\n        getNextMeetingTimeString(dailyCalendarEvents),\n      );\n    }, 10 * 1000);\n\n    return () => {\n      // component dismount\n      clearInterval(updateMeetingTimeInterval);\n    };\n  }, [\n    props.mainGroupStore.state.appGroup.userIds[props.user.userId]\n      .dailyCalendarEvents,\n  ]);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Avatar alt={props.user.displayName} src={props.user.avatarUrl} />\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" spacing={0} justify=\"flex-start\">\n          <Grid item>\n            <Typography>{props.user.displayName}</Typography>\n          </Grid>\n          <Grid item>\n            {props.currentUser &&\n            nextMeetingTimeString === \"Calendar not synced\" ? (\n              <Typography variant=\"caption\" color=\"error\">\n                <i>{nextMeetingTimeString}</i>\n              </Typography>\n            ) : (\n              <Typography variant=\"caption\">\n                <i>{nextMeetingTimeString}</i>\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nfunction getNextMeetingTimeString(\n  dailyCalendarEvents: Array<CalendarMeeting>,\n): string {\n  // first, filter all meetings that ended in the past, and do not start today\n  const currentDateObj = new Date();\n  const currentTimeNum = currentDateObj.getTime();\n  const currentDateString = currentDateObj.toDateString();\n\n  const upcomingMeetings = dailyCalendarEvents.filter(m => {\n    const localEndTime = new Date(m.endTime);\n    const localEndTimeNum = localEndTime.getTime();\n    const meetingEndsInTheFuture = localEndTimeNum > currentTimeNum;\n\n    const localStartTime = new Date(m.startTime);\n    const localStartTimeDate = localStartTime.toDateString();\n    const meetingStartsToday = localStartTimeDate === currentDateString;\n\n    return meetingEndsInTheFuture && meetingStartsToday;\n  });\n\n  const nextMeeting = upcomingMeetings[0];\n  if (nextMeeting) {\n    const localStartTime = new Date(nextMeeting.startTime);\n    const localEndTime = new Date(nextMeeting.endTime);\n\n    const localStartTimeNum = localStartTime.getTime();\n    const meetingStartedInThePast = localStartTimeNum < currentTimeNum;\n\n    const startTimeString = localStartTime.toLocaleTimeString().slice(0, -6);\n    const endTimeString = localEndTime.toLocaleTimeString().slice(0, -6);\n\n    const nextMeetingTimeString = meetingStartedInThePast\n      ? `${nextMeeting.eventName} ends at ${endTimeString}`\n      : `Nexts meeting at ${startTimeString}`;\n    return nextMeetingTimeString;\n  } else if (dailyCalendarEvents.length === 0) {\n    return NOT_SYNCED_MESSAGE;\n  } else {\n    return NO_UPCOMING_EVENTS_MESSAGE;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Button, Divider, Avatar } from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { mainGroupActionCreator } from \"../mainGroupActionCreator\";\nimport { UserEntry } from \"../../../../sharedTypes/userEntry\";\nimport { UserAvatarNameRow } from \"./UserAvatarNameRow\";\nimport { AppGroupUser } from \"../../../../sharedTypes/appGroupEntry\";\n\nexport const MainGroupHeader = (props: {\n  mainGroupStore: MainGroupStore;\n  user: AppGroupUser;\n}) => {\n  return (\n    <Grid container direction=\"column\" spacing={2} justify=\"center\">\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={3}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography>\n              Group Id: {props.mainGroupStore.state.appGroup.appGroupId}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={async () => {\n                mainGroupActionCreator.syncCalendarEvents(\n                  props.user.userId,\n                  props.mainGroupStore.state.appGroup.appGroupId,\n                );\n              }}\n            >\n              Sync Google Calendar\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <UserAvatarNameRow\n          user={props.user}\n          mainGroupStore={props.mainGroupStore}\n          currentUser={true}\n        />\n      </Grid>\n      <Grid item>\n        <Divider></Divider>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Button, Divider } from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { mainGroupActionCreator } from \"../mainGroupActionCreator\";\nimport { UserEntry } from \"../../../../sharedTypes/userEntry\";\nimport { AppStore } from \"../../appStore\";\nimport { databaseService } from \"../../../scripts/databaseServices/databaseService\";\n\nexport const MainGroupFooter = (props: {\n  appStore: AppStore;\n  mainGroupStore: MainGroupStore;\n  user: UserEntry;\n}) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={async () => {\n        props.appStore.dispatch({\n          type: \"TRANSITION_APP_STATE\",\n          newAppState: { view: \"loading\" },\n        });\n        await databaseService.userLeaveGroup(\n          props.user,\n          props.mainGroupStore.state.appGroup,\n        );\n        props.appStore.dispatch({\n          type: \"TRANSITION_APP_STATE\",\n          newAppState: {\n            view: \"joinGroup\",\n            user: { ...props.user, groupId: null },\n          },\n        });\n      }}\n    >\n      Leave Group\n    </Button>\n  );\n};\n","import { CalendarMeeting } from \"../../../../sharedTypes/appGroupEntry\";\n\nexport function getCurrentCalendarEvent(\n  dailyCalendarEvents: Array<CalendarMeeting>,\n): null | CalendarMeeting {\n  const currentTimeNum = Date.now();\n\n  const currentMeetings = dailyCalendarEvents.filter(m => {\n    const localEndTime = new Date(m.endTime);\n    const localEndTimeNum = localEndTime.getTime();\n    const meetingEndsInTheFuture = localEndTimeNum > currentTimeNum;\n\n    const localStartTime = new Date(m.startTime);\n    const localStartTimeNum = localStartTime.getTime();\n    const meetingStartedInThePast = localStartTimeNum < currentTimeNum;\n\n    return meetingEndsInTheFuture && meetingStartedInThePast;\n  });\n  return currentMeetings[0];\n}\n","import React, { useContext } from \"react\";\nimport { AppStoreContext } from \"../appStore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Button, Divider } from \"@material-ui/core\";\nimport { MainGroupAppState } from \"../appState\";\nimport { databaseService } from \"../../scripts/databaseServices/databaseService\";\nimport { useMainGroupStore } from \"./mainGroupStore\";\nimport { startAppGroupObserver } from \"../appGroupObserver\";\nimport { gapiCalendar } from \"../../scripts/gapi/gapiCalendar\";\nimport { mainGroupActionCreator } from \"./mainGroupActionCreator\";\nimport { MainGroupHeader } from \"./components/MainGroupHeader\";\nimport { MainGroupFooter } from \"./components/MainGroupFooter\";\nimport { ONE_MINUTE } from \"../../scripts/constants/timesInMilliseconds\";\nimport { timeUtils } from \"../../scripts/utils/timeUtils\";\nimport { appGroupsDatabaseAccessor } from \"../../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport {\n  AppGroupEntry,\n  VideoMeeting,\n  CalendarMeeting,\n  AppGroupUser,\n} from \"./../../../sharedTypes/appGroupEntry.d\";\nimport _ from \"underscore\";\nimport { getCurrentCalendarEvent } from \"./components/calendarUiUtils\";\nimport { UserAvatarNameRow } from \"./components/UserAvatarNameRow\";\n\nexport const KEEP_ALIVE_PING_INTERVAL = ONE_MINUTE;\n\nexport const MainGroup = (props: { appState: MainGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const mainGroupStore = useMainGroupStore(props.appState.initialAppGroup);\n  React.useEffect(() => {\n    // component mount\n    // sync calendar events\n    mainGroupActionCreator.syncCalendarEvents(\n      props.appState.user.userId,\n      mainGroupStore.state.appGroup.appGroupId,\n    );\n    const calendarSyncInterval = setInterval(() => {\n      mainGroupActionCreator.syncCalendarEvents(\n        props.appState.user.userId,\n        mainGroupStore.state.appGroup.appGroupId,\n      );\n    }, 10 * ONE_MINUTE);\n\n    appGroupsDatabaseAccessor.sendAlivePing(\n      props.appState.user.userId,\n      mainGroupStore.state.appGroup.appGroupId,\n    );\n    const firebaseAlivePingInterval = setInterval(() => {\n      appGroupsDatabaseAccessor.sendAlivePing(\n        props.appState.user.userId,\n        mainGroupStore.state.appGroup.appGroupId,\n      );\n    }, KEEP_ALIVE_PING_INTERVAL);\n\n    // subscribe to appgroup changes\n    const unsubscribe = startAppGroupObserver(\n      mainGroupStore.state.appGroup.appGroupId,\n      mainGroupStore.dispatch,\n    );\n    const meetingsUiUpdateInterval = setInterval(() => {\n      mainGroupStore.dispatch({\n        type: \"CHECK_FOR_MEETINGS_UI_UPDATE\",\n      });\n    }, 10 * 1000);\n    return () => {\n      clearInterval(calendarSyncInterval);\n      clearInterval(firebaseAlivePingInterval);\n      unsubscribe();\n      clearInterval(meetingsUiUpdateInterval);\n    };\n  }, []);\n\n  const meetingsUi = computeMeetingsUi(mainGroupStore.state.appGroup);\n  console.log(\"meetingsUi\", meetingsUi);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"flex-start\"\n      spacing={2}\n    >\n      <Grid item style={{ width: \"100%\" }}>\n        <MainGroupHeader\n          mainGroupStore={mainGroupStore}\n          user={\n            mainGroupStore.state.appGroup.userIds[props.appState.user.userId]\n          }\n        />\n      </Grid>\n      <Grid item style={{ width: \"100%\" }}>\n        <Grid container direction=\"column\" spacing={2} justify=\"center\">\n          <Grid item>\n            <Typography>\n              <b>Available</b>\n            </Typography>\n            {_.values(meetingsUi.available).map(user => {\n              return (\n                <UserAvatarNameRow\n                  mainGroupStore={mainGroupStore}\n                  user={user}\n                  currentUser={user.userId === props.appState.user.userId}\n                />\n              );\n            })}\n          </Grid>\n          <Grid item>\n            <Typography>\n              <b>Video Calls</b>\n            </Typography>\n            {_.values(meetingsUi.video).map(videoMeeting => {\n              return (\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <Typography>{videoMeeting.meeting.meetingName}</Typography>\n                    {_.values(videoMeeting.users).map(user => {\n                      return (\n                        <UserAvatarNameRow\n                          mainGroupStore={mainGroupStore}\n                          user={user}\n                          currentUser={\n                            user.userId === props.appState.user.userId\n                          }\n                        />\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Grid item>\n            <Typography>\n              <b>Calendar Events</b>\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <Typography>\n              <b>Do Not Disturb</b>\n            </Typography>\n          </Grid> */}\n          <Grid item>\n            <Divider></Divider>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item style={{ width: \"100%\" }}>\n        <MainGroupFooter\n          appStore={appStore}\n          mainGroupStore={mainGroupStore}\n          user={props.appState.user}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\ntype MeetingUsers = { [userId: string]: AppGroupUser };\ntype VideoMeetings = {\n  [videoMeetingId: string]: {\n    meeting: VideoMeeting;\n    users: MeetingUsers;\n  };\n};\ntype CalendarMeetings = {\n  [calendarMeetingId: string]: {\n    meeting: CalendarMeeting;\n    users: MeetingUsers;\n  };\n};\ntype Meetings = {\n  offline: MeetingUsers;\n  video: VideoMeetings;\n  calendar: CalendarMeetings;\n  available: MeetingUsers;\n  busy: MeetingUsers;\n};\n// lastOnline\n// currentMeeting\n// dailyCalendarEvents\n// Offline:\n//  Date.now() - lastOnline > KEEP_ALIVE_PING_INTERVAL\n// Do not Disturb:\n//  !offline && !videoCall and !calendarEvent && status === busy\n// Available:\n//  !offline && !videoCall and !calendarEvent && status === available\n// Video Calls:\n//  videoCall = !offline && currentMeeting is not null\n// Calendar Events:\n//  calendarEvent = !offline && have event in daily calendar events where startTime is in past and endTime is in future\nfunction computeMeetingsUi(appGroup: AppGroupEntry): Meetings {\n  const currentTime = Date.now();\n  const offlineUsers: MeetingUsers = _.values(appGroup.userIds).reduce(\n    (gatheredOfflineUsers, user) => {\n      const userIsOffline =\n        currentTime - user.lastOnline > KEEP_ALIVE_PING_INTERVAL * 1.5;\n      if (userIsOffline) {\n        return {\n          ...gatheredOfflineUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredOfflineUsers;\n      }\n    },\n    {},\n  );\n\n  const videoMeetings: VideoMeetings = _.values(appGroup.userIds).reduce(\n    (gatheredVideoMeetings, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      if (userIsNotOffline && user.currentMeeting) {\n        const userVideoMeeting = user.currentMeeting;\n        const existingMeeting =\n          gatheredVideoMeetings[userVideoMeeting.meetingId];\n        const existingMeetingUsers = existingMeeting\n          ? existingMeeting.users\n          : {};\n        return {\n          ...gatheredVideoMeetings,\n          [userVideoMeeting.meetingId]: {\n            meeting: userVideoMeeting,\n            users: {\n              ...existingMeetingUsers,\n              [user.userId]: user,\n            },\n          },\n        };\n      } else {\n        return gatheredVideoMeetings;\n      }\n    },\n    {} as VideoMeetings,\n  );\n\n  const calendarMeetings: CalendarMeetings = _.values(appGroup.userIds).reduce(\n    (gatheredCalendarMeetings, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const currentCalendarEvent = getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      if (userIsNotOffline && currentCalendarEvent) {\n        const existingCalendarEvent =\n          gatheredCalendarMeetings[currentCalendarEvent.id];\n        const existingCalendarEventUsers = existingCalendarEvent\n          ? existingCalendarEvent.users\n          : {};\n        return {\n          ...gatheredCalendarMeetings,\n          [currentCalendarEvent.id]: {\n            meeting: currentCalendarEvent,\n            users: {\n              ...existingCalendarEventUsers,\n              [user.userId]: user,\n            },\n          },\n        };\n      } else {\n        return gatheredCalendarMeetings;\n      }\n    },\n    {} as CalendarMeetings,\n  );\n\n  const availableUsers: MeetingUsers = _.values(appGroup.userIds).reduce(\n    (gatheredAvailableUsers, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const userDoesntHaveCurrentVideoMeeting = !user.currentMeeting;\n      const userDoesntHaveCurrentCalendarEvent = !getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      const userStatusIsAvailable = user.availabilityStatus === \"available\";\n      if (\n        userIsNotOffline &&\n        userDoesntHaveCurrentVideoMeeting &&\n        userDoesntHaveCurrentCalendarEvent &&\n        userStatusIsAvailable\n      ) {\n        return {\n          ...gatheredAvailableUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredAvailableUsers;\n      }\n    },\n    {},\n  );\n\n  const busyUsers: MeetingUsers = _.values(appGroup.userIds).reduce(\n    (gatheredBusyUsers, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const userDoesntHaveCurrentVideoMeeting = !user.currentMeeting;\n      const userDoesntHaveCurrentCalendarEvent = !getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      const userStatusIsBusy = user.availabilityStatus === \"busy\";\n      if (\n        userIsNotOffline &&\n        userDoesntHaveCurrentVideoMeeting &&\n        userDoesntHaveCurrentCalendarEvent &&\n        userStatusIsBusy\n      ) {\n        return {\n          ...gatheredBusyUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredBusyUsers;\n      }\n    },\n    {},\n  );\n\n  return {\n    offline: offlineUsers,\n    video: videoMeetings,\n    calendar: calendarMeetings,\n    available: availableUsers,\n    busy: busyUsers,\n  };\n}\n","import { AppGroupEntry } from \"./../../sharedTypes/appGroupEntry.d\";\nimport { MainGroupAction } from \"./MainGroup/mainGroupAction.d\";\nimport { appGroupsDatabaseAccessor } from \"./../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport { Dispatch } from \"react\";\n\nexport function startAppGroupObserver(\n  appGroupdId: string,\n  dispatch: Dispatch<MainGroupAction>,\n) {\n  const unsubscribe = appGroupsDatabaseAccessor.watchAppGroup(\n    appGroupdId,\n    (appGroup: AppGroupEntry) => {\n      dispatch({\n        type: \"UPDATE_APP_GROUP\",\n        newAppGroup: appGroup,\n      });\n    },\n  );\n  return unsubscribe;\n}\n","export const ONE_MINUTE = 60 * 1000;\n\nexport const ONE_HOUR = 60 * ONE_MINUTE;\n","export const windowUtils = {\n  getUrlParam: (urlParamKey: string): string | null => {\n    const regExp = new RegExp(urlParamKey + \"=(.*?)($|&)\", \"g\");\n    const decodedWindowLocation = decodeURIComponent(window.location.search);\n    const matchArray = decodedWindowLocation.match(regExp);\n    if (matchArray && matchArray.length) {\n      const firstMatch = matchArray[0];\n      return firstMatch.replace(urlParamKey + \"=\", \"\").replace(\"&\", \"\");\n    } else {\n      return null;\n    }\n  },\n};\n","import { CachedZoomTokenData } from \"../../../sharedTypes/zoomTypes\";\nimport { windowUtils } from \"../utils/windowUtils\";\nimport { environment } from \"../environment/environment\";\n\nexport const zoomAuth = {\n  initialize: (): Promise<CachedZoomTokenData> => {\n    cachedZoomTokenData = new Promise((resolve, _reject) => {\n      const tokenDataString = windowUtils.getUrlParam(\"zoom_token_data\");\n      if (tokenDataString) {\n        const tokenData: CachedZoomTokenData = JSON.parse(\n          decodeURIComponent(tokenDataString),\n        );\n        window.history.pushState(\n          {},\n          document.title,\n          window.location.origin + window.location.pathname,\n        );\n        resolve(tokenData);\n      } else {\n        window.location.href =\n          environment().CLOUD_FUNCTION_ENDPOINT + \"/zoomGetTokenData\";\n      }\n    });\n    return cachedZoomTokenData;\n  },\n  getToken: (): Promise<CachedZoomTokenData> => {\n    if (cachedZoomTokenData) {\n      return cachedZoomTokenData;\n    } else {\n      return zoomAuth.initialize();\n    }\n  },\n};\n\nlet cachedZoomTokenData: Promise<CachedZoomTokenData> | null;\n","export const environment = () => {\n  const dev = {\n    CLOUD_FUNCTION_ENDPOINT: \"http://localhost:8080\",\n  };\n  const production = {\n    CLOUD_FUNCTION_ENDPOINT:\n      \"https://us-central1-project-coco-251813.cloudfunctions.net\",\n  };\n  switch (window.location.host) {\n    case \"localhost:3006\":\n      return dev;\n    case \"solomonlake.github.io\":\n      return production;\n    default:\n      throw new Error(`unknown window host:${window.location.host}`);\n  }\n};\n","import { LoginUserSuccessResult } from \"../../../sharedTypes/loginUserSuccessResult\";\nimport { zoomAuth } from \"../zoom/zoomAuth\";\nimport { environment } from \"../environment/environment\";\n\nexport async function login() {\n  const tokenData = await zoomAuth.getToken();\n  const response = await fetch(\n    environment().CLOUD_FUNCTION_ENDPOINT +\n      `/loginUser?zoomTokenData=${encodeURIComponent(\n        JSON.stringify(tokenData),\n      )}`,\n  );\n  const responseJson: LoginUserSuccessResult = await response.json();\n  return responseJson;\n}\n","import React from \"react\";\nimport { Loading } from \"./Loading/Loading\";\nimport { AppStoreContext, useAppStore, AppStore } from \"./appStore\";\nimport { AppAction } from \"./appActions\";\nimport { JoinGroup } from \"./JoinGroup/JoinGroup\";\nimport { MainGroup } from \"./MainGroup/MainGroup\";\nimport { zoomApi } from \"../scripts/zoom/zoomApi\";\nimport { zoomAuth } from \"../scripts/zoom/zoomAuth\";\nimport { login } from \"../scripts/login/login\";\nimport { initializeFirestore } from \"../scripts/firestore/firestoreInitialize\";\nimport { usersDatabaseAccessor } from \"../scripts/databaseServices/usersDatabaseAccessor\";\nimport { appGroupsDatabaseAccessor } from \"../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport { setConfig } from \"../scripts/config/config\";\nimport { Grid, Container } from \"@material-ui/core\";\n\nasync function initializeApp(appStore: AppStore) {\n  zoomAuth.initialize();\n  const userAndCustomToken = await login();\n  setConfig(userAndCustomToken.config);\n  await initializeFirestore(userAndCustomToken.customToken);\n  const user = await usersDatabaseAccessor.findOrCreateUser(\n    userAndCustomToken.user,\n  );\n  const appGroup = user.groupId\n    ? await appGroupsDatabaseAccessor.getAppGroup(user.groupId)\n    : null;\n  if (user.groupId && appGroup) {\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: { view: \"mainGroup\", user, initialAppGroup: appGroup },\n    });\n  } else {\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: { view: \"joinGroup\", user },\n    });\n  }\n}\n\nexport const App: React.FC = () => {\n  return (\n    <Container maxWidth=\"xs\" style={{ marginTop: \"2em\" }}>\n      <AppContent />\n    </Container>\n  );\n};\n\nexport const AppContent: React.FC = () => {\n  const appStore = useAppStore();\n  switch (appStore.state.view) {\n    case \"initial\":\n      initializeApp(appStore);\n      return <Loading />;\n    case \"loading\":\n      return <Loading />;\n    case \"joinGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <JoinGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    case \"mainGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <MainGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    default:\n      const _: never = appStore.state;\n      throw new Error(`unknown state view`);\n  }\n};\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"typeface-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline></CssBaseline>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}