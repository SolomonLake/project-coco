{"version":3,"sources":["components/Loading/Loading.tsx","components/appStore.ts","components/JoinGroup/joinGroupStore.ts","components/JoinGroup/joinGroupApi.ts","scripts/zoom/zoomAuth.ts","components/JoinGroup/JoinGroup.tsx","components/Main/Main.tsx","environments/config.ts","scripts/utils/windowUtils.ts","scripts/zoom/zoomApi.ts","components/App.tsx","theme.ts","index.tsx"],"names":["Loading","Typography","initialState","view","reducer","state","action","console","log","type","newState","AppStoreContext","React","createContext","cachedZoomTokenData","joinGroupApi","createGroup","a","JoinGroup","appStore","useContext","useReducer","useJoinGroupStore","Grid","container","direction","justify","alignItems","spacing","item","TextField","label","margin","variant","Button","color","Divider","onClick","dispatch","Main","config","window","location","host","CLOUD_FUNCTION_ENDPOINT","Error","windowUtils","urlParamKey","regExp","RegExp","matchArray","decodeURIComponent","search","match","length","replace","zoomAuth","initialize","Promise","resolve","_reject","tokenDataString","tokenData","JSON","parse","history","pushState","document","title","origin","pathname","href","expiresAt","access_token","token_type","refresh_token","expires_in","scope","getToken","zoomApi","getUser","makeApiCall","result","apiUrl","fetch","encodeURIComponent","stringify","response","json","responseJson","user","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","useAppStore","initializeApp","Provider","value","getElementById"],"mappings":"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","file":"static/js/main.ff509daa.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Loading = () => {\n  return <Typography>Loading</Typography>;\n};\n","import { AppAction } from \"./appActions\";\nimport { AppState } from \"./appState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type AppStore = {\n  state: AppState;\n  dispatch: Dispatch<AppAction>;\n};\n\nconst initialState: AppState = { view: \"initial\" };\n\nfunction reducer(state: AppState, action: AppAction) {\n  console.log(\"appStoreReducer previous state:\", state);\n  console.log(\"appStoreReducer\", action);\n  switch (action.type) {\n    case \"CHANGE_VIEW\": {\n      return logState({ ...state, view: action.view });\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: AppState) {\n  console.log(\"appStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const AppStoreContext = React.createContext<AppStore>(null as any);\n\nexport function useAppStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","import { JoinGroupAction } from \"./joinGroupAction\";\nimport { JoinGroupState } from \"./joinGroupState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type JoinGroupStore = {\n  state: JoinGroupState;\n  dispatch: Dispatch<JoinGroupAction>;\n};\n\nconst initialState: JoinGroupState = { view: \"initial\" };\n\nfunction reducer(state: JoinGroupState, action: JoinGroupAction) {\n  console.log(\"joinGroupStoreReducer previous state:\", state);\n  console.log(\"joinGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_JOIN_ID\": {\n      return logState(state);\n      break;\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: JoinGroupState) {\n  console.log(\"joinGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const JoinGroupStoreContext = React.createContext<JoinGroupStore>(\n  null as any,\n);\n\nexport function useJoinGroupStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","export const joinGroupApi = {\n  createGroup: async () => {},\n};\n","import { CachedZoomTokenData } from \"../../shared/types/zoomTypes\";\nimport { windowUtils } from \"../utils/windowUtils\";\nimport { config } from \"../../environments/config\";\n\nexport const zoomAuth = {\n  initialize: (): Promise<CachedZoomTokenData> => {\n    cachedZoomTokenData = new Promise((resolve, _reject) => {\n      const tokenDataString = windowUtils.getUrlParam(\"zoom_token_data\");\n      if (tokenDataString) {\n        const tokenData: CachedZoomTokenData = JSON.parse(\n          decodeURIComponent(tokenDataString),\n        );\n        window.history.pushState(\n          {},\n          document.title,\n          window.location.origin + window.location.pathname,\n        );\n        resolve(tokenData);\n      } else {\n        window.location.href =\n          config().CLOUD_FUNCTION_ENDPOINT + \"/zoomGetTokenData\";\n        resolve({\n          expiresAt: 0,\n          access_token: \"\",\n          token_type: \"\",\n          refresh_token: \"\",\n          expires_in: 0,\n          scope: \"\",\n        });\n      }\n    });\n    return cachedZoomTokenData;\n  },\n  getToken: (): Promise<CachedZoomTokenData> => {\n    if (cachedZoomTokenData) {\n      return cachedZoomTokenData;\n    } else {\n      return zoomAuth.initialize();\n    }\n  },\n};\n\nlet cachedZoomTokenData: Promise<CachedZoomTokenData> | null;\n","import React, { useContext } from \"react\";\nimport logo from \"../../svgs/logo.svg\";\nimport { AppStoreContext } from \"../appStore\";\nimport { useJoinGroupStore } from \"./joinGroupStore\";\nimport { joinGroupApi } from \"./joinGroupApi\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport const JoinGroup = () => {\n  const appStore = useContext(AppStoreContext);\n  const joinGroupStore = useJoinGroupStore();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <TextField label=\"Group Id\" margin=\"normal\" variant=\"outlined\" />\n          </Grid>\n          <Grid item>\n            <Button color=\"primary\">Join</Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          onClick={async () => {\n            appStore.dispatch({ type: \"CHANGE_VIEW\", view: \"loading\" });\n            await joinGroupApi.createGroup();\n            appStore.dispatch({ type: \"CHANGE_VIEW\", view: \"main\" });\n          }}\n        >\n          Create Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AppStoreContext } from \"../appStore\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Main = () => {\n  const appStore = useContext(AppStoreContext);\n  return <Typography>Main</Typography>;\n};\n","export const config = () => {\n  const dev = {\n    CLOUD_FUNCTION_ENDPOINT: \"http://localhost:8080\",\n  };\n  const production = {\n    CLOUD_FUNCTION_ENDPOINT:\n      \"https://us-central1-project-coco-251813.cloudfunctions.net\",\n  };\n  switch (window.location.host) {\n    case \"localhost:3006\":\n      return dev;\n    case \"solomonlake.github.io\":\n      return production;\n    default:\n      throw new Error(`unknown window host:${window.location.host}`);\n  }\n};\n","export const windowUtils = {\n  getUrlParam: (urlParamKey: string): string | null => {\n    const regExp = new RegExp(urlParamKey + \"=(.*?)($|&)\", \"g\");\n    const decodedWindowLocation = decodeURIComponent(window.location.search);\n    const matchArray = decodedWindowLocation.match(regExp);\n    if (matchArray && matchArray.length) {\n      const firstMatch = matchArray[0];\n      return firstMatch.replace(urlParamKey + \"=\", \"\").replace(\"&\", \"\");\n    } else {\n      return null;\n    }\n  },\n};\n","import { config } from \"../../environments/config\";\nimport { zoomAuth } from \"./zoomAuth\";\n\nexport const zoomApi = {\n  getUser: async () => {\n    const apiUrl = \"https://api.zoom.us/v2/users/me\";\n    const result = await makeApiCall(apiUrl);\n    return result;\n  },\n};\n\nasync function makeApiCall(apiUrl: string) {\n  const tokenData = await zoomAuth.getToken();\n  const response = await fetch(\n    config().CLOUD_FUNCTION_ENDPOINT +\n      `/zoomApiProxy?endPoint=${apiUrl}&zoomTokenData=${encodeURIComponent(\n        JSON.stringify(tokenData),\n      )}`,\n  );\n  const responseJson = await response.json();\n  return responseJson;\n}\n","import React from \"react\";\nimport { Loading } from \"./Loading/Loading\";\nimport { AppStoreContext, useAppStore, AppStore } from \"./appStore\";\nimport { AppAction } from \"./appActions\";\nimport { JoinGroup } from \"./JoinGroup/JoinGroup\";\nimport { Main } from \"./Main/Main\";\nimport { zoomApi } from \"../scripts/zoom/zoomApi\";\nimport { zoomAuth } from \"../scripts/zoom/zoomAuth\";\n\nasync function initializeApp(appStore: AppStore) {\n  zoomAuth.initialize();\n  const user = await zoomApi.getUser();\n  console.log(\"zoom user\", user);\n  appStore.dispatch({ type: \"CHANGE_VIEW\", view: \"joinGroup\" });\n}\n\nexport const App: React.FC = () => {\n  const appStore = useAppStore();\n  switch (appStore.state.view) {\n    case \"initial\":\n      initializeApp(appStore);\n      return <Loading />;\n    case \"loading\":\n      return <Loading />;\n    case \"joinGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <JoinGroup />\n        </AppStoreContext.Provider>\n      );\n    case \"main\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <Main />\n        </AppStoreContext.Provider>\n      );\n    default:\n      const _: never = appStore.state.view;\n      throw new Error(`unknown state view: ${appStore.state.view}`);\n  }\n};\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"typeface-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\nimport { config } from \"./environments/config\";\n\nfetch(config().CLOUD_FUNCTION_ENDPOINT + `/firestoreDb`);\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline></CssBaseline>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}