{"version":3,"sources":["components/Loading/Loading.tsx","scripts/config/config.ts","scripts/firestore/firestoreInitialize.ts","scripts/firestore/firestoreApi.ts","scripts/databaseServices/usersDatabaseAccessor.ts","scripts/utils/generateUtils.ts","scripts/notification/notification.ts","components/appStore.ts","components/JoinGroup/joinGroupStore.ts","scripts/utils/localStorageUtils.ts","scripts/utils/windowUtils.ts","scripts/databaseServices/appGroupsDatabaseAccessor.ts","scripts/databaseServices/databaseService.ts","components/JoinGroup/JoinGroup.tsx","components/MainGroup/mainGroupStore.ts","scripts/gapi/ensureGapiClient.ts","scripts/gapi/gapiCalendar.ts","components/MainGroup/mainGroupActionCreator.ts","scripts/utils/dateUtils.ts","components/MainGroup/components/UserAvatarNameRow.tsx","scripts/utils/copyUtils.ts","components/MainGroup/components/MainGroupHeader.tsx","components/MainGroup/components/MainGroupFooter.tsx","components/MainGroup/components/meetingUISections/ZoomCallsSection.tsx","components/MainGroup/components/meetingUISections/GoogleCalendarEventsSection.tsx","components/MainGroup/components/calendarUiUtils.ts","components/MainGroup/components/MainGroupMeetingsUI.tsx","components/MainGroup/components/computeMeetingsUi.ts","components/MainGroup/MainGroup.tsx","scripts/constants/timesInMilliseconds.ts","components/appGroupObserver.ts","scripts/environment/environment.ts","scripts/zoom/zoomAuth.ts","scripts/login/login.ts","components/appUserObserver.ts","components/App.tsx","theme.ts","index.tsx"],"names":["Loading","Grid","container","direction","justify","alignItems","spacing","item","Typography","config","_config","Error","firestoreDb","_firestoreDb","initializeFirestore","customToken","a","async","firebase","initializeApp","apiKey","FIRESTORE_API_KEY","authDomain","FIRESTORE_AUTH_DOMAIN","projectId","FIRESTORE_PROJECT_ID","auth","signInWithCustomToken","catch","error","code","message","console","log","firestore","firestoreApiFactory","collection","get","documentPath","docRef","doc","exists","data","set","entry","update","delete","watch","callback","onSnapshot","batch","collectionRef","collectionPath","usersDatabaseApi","usersDatabaseAccessor","watchUser","userId","getUser","createUser","user","findOrCreateUser","id","existingUser","userEntry","displayName","first_name","last_name","personalMeetingUrl","personal_meeting_url","avatarUrl","pic_url","groupId","notificationQueue","updateGroup","pushNotification","notification","pushNotificationAccessor","notificationId","clearNotifications","notificationArray","notificationClearBatch","map","userRef","FieldValue","commit","generateRandomString","n","possible","text","i","charAt","Math","floor","random","length","notificationSet","Object","values","type","window","open","meetingUrl","fromUserId","from","fromId","timestamp","Date","now","replace","c","r","toString","initialState","view","reducer","state","action","logState","newAppState","newUser","newState","oldState","runEffects","AppStoreContext","React","createContext","joinId","newJoinId","localStorageUtils","itemKey","maybeItemValue","localStorage","getItem","JSON","parse","itemValue","setItem","stringify","windowUtils","urlParamKey","urlParams","queryString","location","search","slice","parsedParam","Array","urlSearchParams","paramsWithoutKey","newSearch","keys","origin","pathname","newWindow","close","e","appGroupsDatabaseApi","appGroupsDatabaseAccessor","watchAppGroup","appGroupId","getAppGroup","getExistingAppGroup","existingGroup","deleteAppGroup","createAppGroup","appGroup","createNewAppGroup","firstUser","newAppGroup","toUpperCase","userIds","lastOnline","availabilityStatus","currentMeeting","dailyCalendarEvents","userJoinExistingAppGroup","appGroupUser","updateGroupAccessor","removeUserFromAppGroup","setUserCalendarEvents","calendarEvents","updateUser","sendAlivePing","databaseService","newGroup","group","_","JoinGroup","props","appStore","useContext","joinGroupStore","useReducer","dispatch","useJoinGroupStore","TextField","label","margin","variant","value","onChange","target","Button","color","onClick","appState","initialAppGroup","popupsBlocked","Divider","lastCheckForMeetingUIUpdate","_gapiClientLoaded","gapiCalendar","gapi","client","Promise","resolve","reject","load","initConfig","GOOGLE_CALENDAR_API_KEY","clientId","GOOGLE_AUTH_CLIENT_ID","discoveryDocs","scope","init","authInstance","auth2","getAuthInstance","isSignedIn","signIn","gapiClient","calendar","events","list","calendarId","timeMin","toISOString","showDeleted","singleEvents","maxResults","orderBy","response","eventsResult","result","items","startTime","start","dateTime","date","summary","mainGroupActionCreator","convertGapiCalendarEventToCalendarEvent","gapiCalendarEvent","eventName","endTime","end","eventLink","htmlLink","dateUtils","toLocaleTimeString","timeInMS","minutes","minutesRemainder","hours","UserAvatarNameRow","mainGroupStore","useState","getNextMeetingTimeString","nextMeetingTimeString","updateNextMeetingTimeString","useEffect","updateMeetingTimeInterval","setInterval","clearInterval","currentUser","Avatar","alt","src","showNextMeetingTime","isCurrentUser","section","currentDateObj","currentTimeNum","getTime","currentDateString","toDateString","nextMeeting","filter","m","meetingEndsInTheFuture","localStartTimeDate","localStartTime","localEndTime","meetingStartedInThePast","startTimeString","endTimeString","copyUtils","el","document","createElement","setAttribute","style","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","body","appendChild","select","selectionStart","selectionEnd","success","execCommand","err","removeChild","removeAllRanges","addRange","useStyles","makeStyles","theme","icon","transform","MainGroupHeader","classes","joinGroupUrl","className","MainGroupFooter","leavingConfirmed","updateLeavingConfirmed","Checkbox","checked","event","inputProps","size","disabled","ZoomCallsSection","currentUserId","videoMeetings","videoMeeting","meetingLengthInMinutes","meeting","meetingStartTime","href","display","users","GoogleCalendarEventsSection","calendarMeetings","calendarEvent","firstUserInMeeting","firstUserMeetingUrl","flexGrow","IconButton","aria-label","getCurrentCalendarEvent","localStartTimeNum","MainGroupMeetingsUI","meetingsUi","restOfUsers","sortedUserIds","sort","currentTime","offlineUsers","reduce","gatheredOfflineUsers","KEEP_ALIVE_PING_INTERVAL","gatheredVideoMeetings","userVideoMeeting","existingMeeting","meetingId","existingMeetingUsers","gatheredCalendarMeetings","userIsNotOffline","currentCalendarEvent","existingCalendarEvent","existingCalendarEventUsers","availableUsers","gatheredAvailableUsers","userDoesntHaveCurrentVideoMeeting","userDoesntHaveCurrentCalendarEvent","userStatusIsAvailable","busyUsers","gatheredBusyUsers","userStatusIsBusy","offline","video","available","busy","computeMeetingsUi","MainGroup","useMainGroupStore","calendarSyncInterval","appGroupdId","firebaseAlivePingInterval","unsubscribe","meetingsUiUpdateInterval","width","environment","host","CLOUD_FUNCTION_ENDPOINT","loggedIn","_reject","history","pushState","title","zoomAuth","login","fetch","credentials","json","responseJson","startUserObserver","AppContent","useAppStore","userAndCustomToken","windowJoinId","newestUserVersion","Provider","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","Container","maxWidth","marginTop","path","component","getElementById"],"mappings":"8LAIaA,EAAU,WACrB,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,mB,gDCRD,SAASC,IACd,GAAIC,EACF,OAAOA,EAEP,MAAM,IAAIC,MAAM,0BAIpB,IAAID,EAA4B,KCTzB,SAASE,IACd,GAAIC,EACF,OAAOA,EAEP,MAAM,IAAIF,MAAM,+BAIb,SAAeG,EAAoBC,GAAnC,SAAAC,EAAAC,OAAA,uDACLC,IAASC,cAAc,CACrBC,OAAQX,IAASY,kBACjBC,WAAYb,IAASc,sBACrBC,UAAWf,IAASgB,uBAJjB,WAAAT,EAAA,MAMCE,IACHQ,OACAC,sBAAsBZ,GACtBa,OAAM,SAASC,GAAQ,IACdC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,MADAC,QAAQC,IAAI,4BAA6BH,EAAMC,GACzCF,MAZL,OAeLhB,EAAeK,IAASgB,YAfnB,qCAkBP,IAAIrB,EAAoD,KC5B3CsB,EAAsB,SACjCC,GAEA,MAAO,CACLC,IAAK,SAAOC,GAAP,iBAAAtB,EAAAC,OAAA,uDACGsB,EAAS3B,IACZwB,WAAWA,GACXI,IAAIF,GAHJ,WAAAtB,EAAA,MAKeuB,EAAOF,OALtB,YAKGG,EALH,QAMKC,OANL,yCAOMD,EAAIE,QAPV,gCASM,MATN,sCAYLC,IAAK,SAAOL,EAAsBM,GAA7B,SAAA5B,EAAAC,OAAA,kEAAAD,EAAA,MACGJ,IACHwB,WAAWA,GACXI,IAAIF,GACJK,IAAIC,IAJJ,sCAMLC,OAAQ,SACNP,EACAM,GAFM,SAAA5B,EAAAC,OAAA,kEAAAD,EAAA,MAIAJ,IACHwB,WAAWA,GACXI,IAAIF,GACJO,OAAOD,IAPJ,sCASRE,OAAQ,SAAOR,GAAP,SAAAtB,EAAAC,OAAA,kEAAAD,EAAA,MACAJ,IACHwB,WAAWA,GACXI,IAAIF,GACJQ,UAJG,sCAMRC,MAAO,SAACT,EAAsBU,GAC5B,OAAOpC,IACJwB,WAAWA,GACXI,IAAIF,GACJW,YAAW,SAAAT,GACVQ,EAASR,EAAIE,YAGnBQ,MAAO,WACL,OAAOtC,IAAcsC,SAEvBX,OAAQ,SAACD,GACP,OAAO1B,IACJwB,WAAWA,GACXI,IAAIF,IAETa,cAAe,SAACC,GACd,OAAOxC,IAAcwB,WAAWA,MChDhCiB,EAAmBlB,EAA+B,SAE3CmB,EAAwB,CACnCC,UAAW,SAACC,EAAgBR,GAC1B,OAAOK,EAAiBN,MAAMS,EAAQR,IAExCS,QAAS,SAAOD,GAAP,SAAAxC,EAAAC,OAAA,kEAAAD,EAAA,MACMqC,EAAiBhB,IAAImB,IAD3B,8EAGTE,WAAY,SAAOC,GAAP,SAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MACGqC,EAAiBV,IAAIgB,EAAKH,OAAQG,IADrC,8EAGZC,iBAAkB,SAAOD,GAAP,mBAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MACWsC,EAAsBG,QAAQE,EAAKE,KAD9C,YACVC,EADU,gCAGRC,EAHQ,eAITD,EAJS,CAKZE,YAAaL,EAAKM,WAAa,IAAMN,EAAKO,UAC1CC,mBAAoBR,EAAKS,qBACzBC,UAAWV,EAAKW,UAPJ,WAAAtD,EAAA,MASRqC,EAAiBR,OAAOkB,EAAUP,OAAQO,IATlC,gCAUPA,GAVO,eAYRA,EAAY,CAChBP,OAAQG,EAAKE,GACbU,QAAS,KACTP,YAAaL,EAAKM,WAAa,IAAMN,EAAKO,UAC1CC,mBAAoBR,EAAKS,qBACzBC,UAAWV,EAAKW,QAChBE,kBAAmB,IAlBP,YAAAxD,EAAA,MAoBRqC,EAAiBV,IAAIoB,EAAUP,OAAQO,IApB/B,iCAqBPA,GArBO,uCAwBlBU,YAAa,SAAOjB,EAAgBe,GAAvB,SAAAvD,EAAAC,OAAA,kEAAAD,EAAA,MACLqC,EAAiBR,OAAOW,EAAQ,CAAEe,aAD7B,sCAGbG,iBAAkB,SAAOlB,EAAgBmB,GAAvB,eAAA3D,EAAAC,OAAA,uDACV2D,EADU,2CAEQD,EAAaE,gBAAmBF,GAFxC,WAAA3D,EAAA,MAIVqC,EAAiBR,OAAOW,EAAQoB,IAJtB,sCAMlBE,mBAAoB,SAClBtB,EACAuB,GAFkB,eAAA/D,EAAAC,OAAA,uDAIZ+D,EAAyB3B,EAAiBH,QAChD6B,EAAkBE,KAAI,SAAAN,GACpB,IAAMO,EAAU7B,EAAiBd,OAAOiB,GACxCwB,EAAuBnC,OAAOqC,EAA9B,2CACwBP,EAAaE,gBAAmB3D,IAASgB,UAAUiD,WAAWrC,cARtE,WAAA9B,EAAA,MAWZgE,EAAuBI,UAXX,uCCrDf,SAASC,EAAqBC,EAAWC,GAE9C,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAAGG,IACrBD,GAAQD,EAASG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,EAASO,SAG9D,OAAON,ECCF,IAAMb,EACY,SACrBoB,EACAvC,GAEA,IAAMuB,EAAoBiB,OAAOC,OAAOF,GACpChB,EAAkBe,OAAS,IAC7Bf,EAAkBE,KAAI,SAACN,GACrB,OAAQA,EAAauB,MACnB,IAAK,cACHC,OAAOC,KAAKzB,EAAa0B,WAAY,UACrC,MACF,QACErE,QAAQC,IAAI,8BAA+B0C,EAAauB,MAC7BvB,EAAauB,SAG9C5C,EAAsBwB,mBAAmBtB,EAAQuB,KAjB1CJ,EAoBkB,SAC3BnB,EACA8C,EACAD,GAEA,OAAO/C,EAAsBoB,iBAAiBlB,EAAQ,CACpD0C,KAAM,cACNG,aACAE,KAAM,OACNC,OAAQF,EACRG,UAAWC,KAAKC,MAChB9B,eDdG,uCAAuC+B,QAAQ,SAAS,SAASC,GACtE,IAAIC,EAAqB,GAAhBnB,KAAKE,SAAiB,EAE/B,OADW,KAALgB,EAAWC,EAAS,EAAJA,EAAW,GACxBC,SAAS,UElBhBC,EAAyB,CAAEC,KAAM,WAEvC,SAASC,EAAQC,EAAiBC,GAGhC,OAFApF,QAAQC,IAAI,kCAAmCkF,GAC/CnF,QAAQC,IAAI,kBAAmBmF,GACvBA,EAAOlB,MACb,IAAK,uBACH,OAAOmB,EAASD,EAAOE,YAAaH,GAEtC,IAAK,cACH,OAAQA,EAAMF,MACZ,IAAK,YACL,IAAK,YACH,OAAOI,EAAS,eAETF,EAFQ,CAGXxD,KAAMyD,EAAOG,UAEfJ,GAEJ,IAAK,UACL,IAAK,UACH,OAAOA,EACT,QAEE,OAAOA,EAGb,QAEE,OAAOA,GAIb,SAASE,EAASG,EAAoBC,GAGpC,OAFAzF,QAAQC,IAAI,iCAAkCuF,GAahD,SAAoBA,EAAoBC,GACtC,OAAQD,EAASP,MACf,IAAK,YACL,IAAK,YACHtC,EACE6C,EAAS7D,KAAKa,kBACdgD,EAAS7D,KAAKH,QAEhB,MACF,IAAK,UACL,IAAK,UACH,MACF,UAxBFkE,CAAWF,GACJA,EAIF,IAAMG,EAAkBC,IAAMC,cAAwB,MC1C7D,IAAMb,EAA+B,CAAEc,OAAQ,IAE/C,SAASZ,EAAQC,EAAuBC,GAGtC,OAFApF,QAAQC,IAAI,wCAAyCkF,GACrDnF,QAAQC,IAAI,wBAAyBmF,GAC7BA,EAAOlB,MACb,IAAK,iBACH,OAYYsB,EAZI,eACXL,EADU,CAEbW,OAAQV,EAAOW,YAWrB/F,QAAQC,IAAI,uCAAwCuF,GAC7CA,EARL,QACmBJ,EAAOlB,KACxB,OAAOiB,EAIb,IAAkBK,EAMmBI,IAAMC,cACzC,M,oBC7BWG,EACF,SAACC,GACR,IAAMC,EAAiBC,aAAaC,QAAQH,GAC5C,OAAOC,EAAiBG,KAAKC,MAAMJ,GAAkB,MAH5CF,EAKF,SACPC,EACAM,GAEAJ,aAAaK,QAAQP,EAASI,KAAKI,UAAUF,K,iBCZpCG,EACE,SAACC,GACZ,IAAMC,EAAYC,IAAYP,MAAMnC,OAAO2C,SAASC,OAAOC,MAAM,IAC3DC,EAAcL,EAAYA,EAAUD,GAAe,KACzD,OAAOM,aAAuBC,MAAQD,EAAY,GAAKA,GAJ9CP,EAgBK,SAACC,GACf,IAAMQ,EAAkBN,IAAYP,MAAMnC,OAAO2C,SAASC,OAAOC,MAAM,IACxCI,GAAqBD,EAA3CR,GAFsC,YAEKQ,EAFL,CAEtCR,GAFsC,WAGzCU,EACJrD,OAAOsD,KAAKF,GAAkBtD,OAAS,EACnC,IAAM+C,IAAYJ,UAAUW,GAC5B,GACN,OAAOjD,OAAO2C,SAASS,OAASpD,OAAO2C,SAASU,SAAWH,GAvBlDX,EAyBQ,WAEjB,GAD2BV,EAA0B,sBAEnD,OAAO,EAEP,IAAMyB,EAAYtD,OAAOC,KAAK,GAAI,UAClC,IACE,OAAIqD,IACFA,EAAUC,QACV1B,EAA0B,sBAAsB,IACzC,GAIT,MAAO2B,GACP,OAAO,I,2BCjCTC,EAAuBzH,EAAmC,aAEnD0H,EAA4B,CACvCC,cAAe,SACbC,EACA/G,GAEA,OAAO4G,EAAqB7G,MAAMgH,EAAY/G,IAEhDgH,YAAa,SAAOD,GAAP,SAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MACE4I,EAAqBvH,IAAI0H,IAD3B,8EAGbE,oBAAqB,SAAOF,GAAP,eAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MACS4I,EAAqBvH,IAAI0H,IADlC,YACbG,EADa,iDAGVA,GAHU,aAKX,IAAIvJ,MACR,oDAAsDoJ,GANvC,sCAUrBI,eAAgB,SAAOJ,GAAP,SAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MACD4I,EAAqB9G,OAAOiH,IAD3B,8EAGhBK,eAAgB,SAAOC,GAAP,SAAArJ,EAAAC,OAAA,kEAAAD,EAAA,MACD4I,EAAqBjH,IAAI0H,EAASN,WAAYM,IAD7C,8EAGhBC,kBAAmB,SAAOC,GAAP,eAAAvJ,EAAAC,OAAA,uDACXuJ,EAA6B,CACjCT,WAAY,KN/B+BzE,EM+BQ,EN5BhDD,EAAqBC,EAD1B,mEM6BwDmF,cACtDC,QAAQ,eACLH,EAAU/G,OADN,eAEA+G,EAFA,CAGH/G,OAAQ+G,EAAU/G,OAClBmH,WAAYjE,KAAKC,MAEjBiE,mBAAoB,YACpBC,eAAgB,KAChBC,oBAAqB,SAXV,WAAA9J,EAAA,MAeX4I,EAAqBjH,IAAI6H,EAAYT,WAAYS,IAftC,gCAgBVA,GAhBU,iCN7Bd,IAA0ClF,MM+C/CyF,yBAA0B,SAAOpH,EAAiBY,GAAxB,iBAAAvD,EAAAC,OAAA,uDAClB+J,EADkB,eAEnBrH,EAFmB,CAGtBH,OAAQG,EAAKH,OACbmH,WAAYjE,KAAKC,MACjBiE,mBAAoB,YACpBC,eAAgB,KAChBC,oBAAqB,OAEjBG,EATkB,iCAUVtH,EAAKH,QAAWwH,GAE9BpB,EAAqB/G,OAAO0B,EAAS0G,GAZb,kBAajBpB,EAA0BI,oBAAoB1F,IAb7B,sCAe1B2G,uBAAwB,SAAOb,EAAyB1G,GAAhC,SAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MAChB4I,EAAqB/G,OAAOwH,EAASN,WAArC,iCACQpG,EAAKH,QAAWtC,IAASgB,UAAUiD,WAAWrC,YAFtC,sCAKxBqI,sBAhEuC,SAiErC3H,EACAuG,EACAqB,GAEA,IAAMH,EAAmB,iCACXzH,EADW,wBACoB4H,GAE7CxB,EAAqB/G,OAAOkH,EAAYkB,IAE1CI,WA1EuC,SA0E5B1H,EAAiBoG,GAAqB,IAAD,EACxCkB,GAAmB,qCACXtH,EAAKH,OADM,cACeG,EAAKU,WADpB,gCAEXV,EAAKH,OAFM,gBAEiBG,EAAKK,aAFtB,gCAGXL,EAAKH,OAHM,YAGaG,EAAKY,SAHlB,gCAIXZ,EAAKH,OAJM,uBAIwBG,EAAKQ,oBAJ7B,GAMzByF,EAAqB/G,OAAOkH,EAAYkB,IAE1CK,cAAe,SAAC9H,EAAgBuG,GAC9B,IAAMkB,EAAmB,iCACXzH,EADW,eACWkD,KAAKC,OAEzCiD,EAAqB/G,OAAOkH,EAAYkB,K,iBC7F/BM,EACE,SAAO5H,GAAP,eAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MACY6I,EAA0BS,kBAAkB3G,IADxD,cACL6H,EADK,kBAAAxK,EAAA,MAELsC,EAAsBmB,YAAYd,EAAKH,OAAQgI,EAASzB,aAFnD,gCAGJyB,GAHI,sCADFD,EAMO,SAChB5H,EACAY,GAFgB,eAAAvD,EAAAC,OAAA,kEAAAD,EAAA,MAIY6I,EAA0BG,YAAYzF,IAJlD,qDAAAvD,EAAA,MAMM6I,EAA0BkB,yBAC5CpH,EACAY,IARY,cAMRkH,EANQ,kBAAAzK,EAAA,MAURsC,EAAsBmB,YAAYd,EAAKH,OAAQe,IAVvC,gCAWPkH,GAXO,iCAaP,MAbO,uCANPF,EAsBK,SAAO5H,EAAiB0G,GAAxB,eAAArJ,EAAAC,OAAA,kEAAAD,EAAA,MACRsC,EAAsBmB,YAAYd,EAAKH,OAAQ,OADvC,yBAAAxC,EAAA,MAER6I,EAA0BqB,uBAAuBb,EAAU1G,IAFnD,yBAAA3C,EAAA,MAGM6I,EAA0BG,YAC5CK,EAASN,aAJG,YAGR0B,EAHQ,UAMDA,EAAMf,SAA8C,IAAnCgB,IAAEzF,OAAOwF,EAAMf,SAAS5E,OANxC,oCAAA9E,EAAA,MAQN6I,EAA0BM,eAAesB,EAAM1B,aARzC,uCChBL4B,EAAY,SAACC,GACxB,IAAMC,EAAWC,qBAAWnE,GACtBoE,ELwBD,WAA8B,IAAD,EACRC,qBAAW9E,EAASF,GADZ,mBAElC,MAAO,CAAEG,MAFyB,KAElB8E,SAFkB,MKxBXC,GACvB,OACE,kBAACjM,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC4L,EAAA,EAAD,CACEC,MAAM,WACNC,OAAO,SACPC,QAAQ,WACRC,MAAOR,EAAe5E,MAAMW,OAC5B0E,SAAU,SAAC7C,GACToC,EAAeE,SAAS,CACtB/F,KAAM,iBACN6B,UAAW4B,EAAE8C,OAAOF,MAAM9B,oBAKlC,kBAACxK,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEC,MAAM,UACNL,QAAQ,YACRM,QAAS,0BAAA5L,EAAAC,OAAA,uDACP4K,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CAAEL,KAAM,aAHhB,WAAAjG,EAAA,MAKauK,EAClBK,EAAMiB,SAASlJ,KACfoI,EAAe5E,MAAMW,SAPhB,QAKD2D,EALC,QAULI,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CACXL,KAAM,YACNtD,KAAK,eACAiI,EAAMiB,SAASlJ,KADhB,CAEFY,QAASkH,EAAM1B,aAEjB+C,gBAAiBrB,EACjBsB,cAAerE,QAInBmD,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAasE,EAAMiB,WAGrB7K,QAAQC,IAAI,wBA5BP,uCAHX,WAwCN,kBAAC+K,EAAA,EAAD,CAASV,QAAQ,WACjB,kBAACrM,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEC,MAAM,YACNL,QAAQ,YACRM,QAAS,0BAAA5L,EAAAC,OAAA,uDACP4K,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CAAEL,KAAM,aAHhB,WAAAjG,EAAA,MAKauK,EAClBK,EAAMiB,SAASlJ,OANV,OAKD8H,EALC,OAQPI,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CACXL,KAAM,YACNtD,KAAK,eAAMiI,EAAMiB,SAASlJ,KAAtB,CAA4BY,QAASkH,EAAM1B,aAC/C+C,gBAAiBrB,EACjBsB,cAAerE,OAdZ,uCAHX,mBCtER,SAASxB,GAAQC,EAAuBC,GAGtC,OAFApF,QAAQC,IAAI,wCAAyCkF,GACrDnF,QAAQC,IAAI,wBAAyBmF,GAC7BA,EAAOlB,MACb,IAAK,mBACH,OAAOmB,GAAS,eACXF,EADU,CAEbkD,SAAUjD,EAAOoD,eAErB,IAAK,+BACH,OAAOnD,GAAS,eACXF,EADU,CAEb8F,4BAA6BvG,KAAKC,SAEtC,QAEE,OAAOQ,GAIb,SAASE,GAASG,GAEhB,OADAxF,QAAQC,IAAI,uCAAwCuF,GAC7CA,EAI4BI,IAAMC,cACzC,MC3CF,IAAIqF,GAA0C,KCAvC,IAAMC,GACS,gCAAAnM,EAAAC,OAAA,kEAAAD,EAAA,MDCf,EAAAA,EAAAC,OAAA,oDACDiM,GADC,kCAAAlM,EAAA,MAEGkM,IAFH,gCAGIE,KAAKC,QAHT,cAKHH,GAMJ,EAAAlM,EAAAC,OAAA,kEAAAD,EAAA,MACQ,IAAIsM,SAAQ,SAACC,EAASC,GAC1BJ,KAAKK,KAAK,eAAgB,CACxBzK,SAAU,4BAAAhC,EAAAC,OAAA,gEAEAyM,EAAa,CACjBtM,OAAQX,IAASkN,wBACjBC,SAAUnN,IAASoN,sBACnBC,cAAe,CACb,iEAEFC,MAAO,4DARH,WAAA/M,EAAA,MAUAoM,KAAKC,OAAOW,KAAKN,IAVjB,WAYAO,EAAeb,KAAKc,MAAMC,mBACEC,WAAW/L,MAbvC,kCAAArB,EAAA,MAeEiN,EAAaI,UAff,OAiBNd,IAjBM,kDAmBNL,GAAoB,KACpBM,EAAO,EAAD,IApBA,gEAHhB,qCAXO,WAAAxM,EAAA,MAMGkM,IANH,gCAOIE,KAAKC,QAPT,uCCDe,cACZiB,EADY,kBAAAtN,EAAA,MAEKsN,EAAWC,SAASC,OAAOC,KAAK,CACrDC,WAAY,UACZC,SAAS,IAAIjI,MAAOkI,cACpBC,aAAa,EACbC,cAAc,EACdC,WAAY,GACZC,QAAS,eARO,cAEZC,EAFY,OAWZC,EAA4CD,EAASE,OACrDX,EAASU,EAAaE,OAAS,GACrCpN,QAAQC,IAAI,mBAAoBuM,GAChCA,EAAOvJ,KAAI,SAAA0E,GACT,IAAM0F,EAAY1F,EAAE2F,MAAQ3F,EAAE2F,MAAMC,UAAY5F,EAAE2F,MAAME,KAAO,KAC/DxN,QAAQC,IAAI0H,EAAE8F,QAAU,KAAOJ,EAAY,QAhB3B,kBAkBXb,GAlBW,uCCCTkB,GACS,SAAOlM,EAAgBuG,GAAvB,iBAAA/I,EAAAC,OAAA,kEAAAD,EAAA,MAGRmM,MAHQ,OACZqB,EADY,OAIZpD,EAAiBoD,EAAOvJ,IAAI0K,IAClC9F,EAA0BsB,sBACxB3H,EACAuG,EACAqB,GARgB,sCAatB,SAASuE,GACPC,GAEA,IAAM/L,EAAK+L,EAAkB/L,GACvBgM,EAAYD,EAAkBH,QAC9BJ,EAAYO,EAAkBN,MAChCM,EAAkBN,MAAMC,UAAYK,EAAkBN,MAAME,KAC5D,KACEM,EAAUF,EAAkBG,IAC9BH,EAAkBG,IAAIR,UAAYK,EAAkBG,IAAIP,KACxD,KACEQ,EAAYJ,EAAkBK,SACpC,GAAIpM,GAAMgM,GAAaR,GAAaS,GAAWE,EAC7C,MAAO,CACLnM,KACAgM,YACAR,YACAS,UACAE,aAIF,MADAhO,QAAQC,IAAI,sBAAuB2N,GAC7B,IAAIjP,MAAM,6C,kCCxCPuP,GACsB,SAACV,GAChC,OACEA,EAAKW,qBAAqBnH,MAAM,GAAI,GACpCwG,EAAKW,qBAAqBnH,OAAO,IAJ1BkH,GAOU,SAACE,GACpB,IAAMC,EAAU1K,KAAKC,MAAMwK,EAAW,KAChCE,EAAmBD,EAAU,GAC7BE,EAAQ5K,KAAKC,MAAMyK,EAAU,IAInC,OAHoBE,EAAQ,EAAR,UAAeA,EAAf,KAA0B,KAE5CD,EAAmB,GAAK,IAAMA,EAAmBA,ICC1CE,GAAoB,SAAC5E,GAQhC,IAAMd,EACJc,EAAM6E,eAAetJ,MAAMkD,SAASK,QAAQkB,EAAMjI,KAAKH,QACpDsH,oBAHD,EAIyD4F,mBAC3DC,GAAyB7F,IALvB,mBAIG8F,EAJH,KAI0BC,EAJ1B,KA4BJ,OApBAjJ,IAAMkJ,WAAU,WAGdD,EAA4BF,GAAyB7F,IACrD,IAAMiG,EAA4BC,aAAY,WAC5CH,EACEF,GAAyB7F,MAE1B,KAEH,OAAO,WAELmG,cAAcF,MAEf,CACDnF,EAAM6E,eAAetJ,MAAMkD,SAASK,QAAQkB,EAAMjI,KAAKH,QACpDsH,sBAEL9I,QAAQC,IAAI2J,EAAMsF,YAAY/M,oBAG5B,kBAAClE,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAS,EACTF,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC4Q,GAAA,EAAD,CAAQC,IAAKxF,EAAMjI,KAAKK,YAAaqN,IAAKzF,EAAMjI,KAAKU,aAEvD,kBAACpE,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASG,QAAS,EAAGF,QAAQ,cACrD,kBAACH,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,KAAaoL,EAAMjI,KAAKK,cAEzB4H,EAAM0F,qBACL,kBAACrR,EAAA,EAAD,CAAMM,MAAI,GACPqL,EAAM2F,eACmB,wBAA1BX,EACE,kBAACpQ,EAAA,EAAD,CAAY8L,QAAQ,UAAUK,MAAM,SAClC,2BAAIiE,IAGN,kBAACpQ,EAAA,EAAD,CAAY8L,QAAQ,WAClB,2BAAIsE,OAOG,cAAlBhF,EAAM4F,SACL5F,EAAMsF,YAAY/M,qBACjByH,EAAM2F,eACL,kBAACtR,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,YACRK,MAAM,YACNC,QAAS,0BAAA5L,EAAAC,OAAA,gDACDoF,EAAauF,EAAMsF,YAAY/M,mBACrCQ,EACEiH,EAAMjI,KAAKH,OACXoI,EAAMsF,YAAY1N,OAClB6C,GAEFF,OAAOC,KAAKC,EAAY,UAPjB,uCAHX,UAiBJuF,EAAMsF,YAAY/M,oBAClByH,EAAM2F,eACY,cAAlB3F,EAAM4F,SACJ,kBAACvR,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,YACRK,MAAM,YACNC,QAAS,oBAAA5L,EAAAC,OAAA,gDACPkF,OAAOC,KAAK,0BAA2B,UADhC,uCAHX,0BAeZ,SAASuK,GACP7F,GAEA,GAA4B,OAAxBA,EACF,MAlHuB,sBAqHvB,IAAM2G,EAAiB,IAAI/K,KACrBgL,EAAiBD,EAAeE,UAChCC,EAAoBH,EAAeI,eAcnCC,EAZmBhH,EAAoBiH,QAAO,SAAAC,GAClD,IAEMC,EAFe,IAAIvL,KAAKsL,EAAElC,SACK6B,UACYD,EAG3CQ,EADiB,IAAIxL,KAAKsL,EAAE3C,WACQwC,eAG1C,OAAOI,GAFoBC,IAAuBN,KAKf,GACrC,GAAIE,EAAa,CACf,IAAMK,EAAiB,IAAIzL,KAAKoL,EAAYzC,WACtC+C,EAAe,IAAI1L,KAAKoL,EAAYhC,SAGpCuC,EADoBF,EAAeR,UACWD,EAE9CY,EAAkBpC,GACtBiC,GAEII,EAAgBrC,GACpBkC,GAMF,OAH8BC,EAAuB,UAC9CP,EAAYjC,UADkC,oBACb0C,GADa,0BAE9BD,GAGvB,MAxJ6B,qB,aCTtBE,GACM,SAAChN,GAChB,IAAMiN,EAAKC,SAASC,cAAc,YAElCF,EAAGlG,MAAQ/G,EAGXiN,EAAGG,aAAa,WAAY,IAE5BH,EAAGI,MAAMC,QAAU,SACnBL,EAAGI,MAAME,SAAW,WACpBN,EAAGI,MAAMG,KAAO,UAChBP,EAAGI,MAAMI,SAAW,OAEpB,IAAMC,EAAYR,SAASS,eACvBC,EAAgB,KAChBF,GAAaA,EAAUG,WAAa,IACtCD,EAAgBF,EAAUI,WAAW,IAIvCZ,SAASa,KAAKC,YAAYf,GAC1BA,EAAGgB,SAGHhB,EAAGiB,eAAiB,EACpBjB,EAAGkB,aAAenO,EAAKM,OAEvB,IAAI8N,GAAU,EACd,IACEA,EAAUlB,SAASmB,YAAY,QAC/B,MAAOC,IAUT,OAPApB,SAASa,KAAKQ,YAAYtB,GAEtBS,GAAaE,IACfF,EAAUc,kBACVd,EAAUe,SAASb,IAGdQ,GChCLM,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAW,sBAIFC,GAAkB,SAAC3I,GAI9B,IAAM4I,EAAUN,KAEhB,OACE,kBAACjU,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASG,QAAS,EAAGF,QAAQ,UACrD,kBAACH,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAS,EACTF,QAAQ,SACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,WACRK,MAAM,YACNC,QAAS,WACP,IAAM6H,EACJtO,OAAO2C,SAASS,OAChBpD,OAAO2C,SAASU,SAChB,WACAoC,EAAM6E,eAAetJ,MAAMkD,SAASN,WACtCyI,GAA0BiC,KAG3B7I,EAAM6E,eAAetJ,MAAMkD,SAASN,WACrC,kBAAC,KAAD,CAAU2K,UAAWF,EAAQH,SAGjC,kBAACpU,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,YACRK,MAAM,UACNC,QAAS,oBAAA5L,EAAAC,OAAA,gDACPyO,GACE9D,EAAMjI,KAAKH,OACXoI,EAAM6E,eAAetJ,MAAMkD,SAASN,YAH/B,uCAHX,2BAeN,kBAAC9J,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,GAAD,CACEoD,KAAMiI,EAAMjI,KACZ8M,eAAgB7E,EAAM6E,eACtBc,eAAe,EACfL,YAAatF,EAAMjI,KACnB2N,qBAAqB,EACrBE,QAAQ,eAGZ,kBAACvR,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyM,EAAA,EAAD,S,UCtEK2H,GAAkB,SAAC/I,GAIzB,IAAD,EAC+C8E,oBAAS,GADxD,mBACGkE,EADH,KACqBC,EADrB,KAEJ,OACE,kBAAC5U,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMG,QAAS,EAAGD,WAAW,UACrD,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACuU,GAAA,EAAD,CACEC,QAASH,EACTpI,SAAU,SAACwI,GACTH,EAAuBG,EAAMvI,OAAOsI,UAEtCpI,MAAM,UACNJ,MAAM,UACN0I,WAAY,CAAE,aAAc,+BAGhC,kBAAChV,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,YACRK,MAAM,YACNuI,KAAK,QACLC,UAAWP,EACXhI,QAAS,oBAAA5L,EAAAC,OAAA,uDACP2K,EAAMC,SAASI,SAAS,CACtB/F,KAAM,uBACNoB,YAAa,CAAEL,KAAM,aAHhB,WAAAjG,EAAA,MAKDuK,EACJK,EAAMjI,KACNiI,EAAM6E,eAAetJ,MAAMkD,WAPtB,OASPuB,EAAMC,SAASI,SAAS,CACtB/F,KAAM,uBACNoB,YAAa,CACXL,KAAM,YACNtD,KAAK,eAAMiI,EAAMjI,KAAb,CAAmBY,QAAS,UAb7B,uCALX,kB,wCCXK6Q,GAAmB,SAACxJ,GAK/B,IAAM6E,EAAiB7E,EAAM6E,eACvB4E,EAAgBzJ,EAAMyJ,cAE5B,OACE,kBAACpV,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxB,kBAACK,EAAA,EAAD,KACE,0CAEDkL,IAAEzF,OAAO2F,EAAM0J,eAAerQ,KAAI,SAAAsQ,GACjC,IAAMC,EAAyBtF,GAC7BxJ,KAAKC,MACH,IAAID,KAAK6O,EAAaE,QAAQC,kBAAkB/D,WAGpD,OACE,kBAAC1R,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAS,EACTF,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAS,EACTF,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmM,EAAA,EAAD,CACEJ,QAAQ,OACRK,MAAM,UACNgJ,KAAMJ,EAAaE,QAAQpP,WAC3BoG,OAAO,UAJT,gBAMe,kBAAC,KAAD,QAGjB,kBAACxM,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYqS,MAAO,CAAE+C,QAAS,SAC3BJ,EACD,kBAAC,KAAD,SAIL9J,IAAEzF,OAAOsP,EAAaM,OAAO5Q,KAAI,SAAAtB,GAChC,OACE,kBAAC,GAAD,CACE8M,eAAgBA,EAChB9M,KAAMA,EACN4N,cAAe5N,EAAKH,SAAW6R,EAC/BnE,YACET,EAAetJ,MAAMkD,SAASK,QAAQ2K,GAExC7D,QAAQ,QACRF,oBACE3N,EAAKH,SAAW6R,c,UC/DzBS,GAA8B,SAAClK,GAK1C,IAAM6E,EAAiB7E,EAAM6E,eACvB4E,EAAgBzJ,EAAMyJ,cAE5B,OACE,kBAACpV,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxB,kBAACK,EAAA,EAAD,KACE,sDAEDkL,IAAEzF,OAAO2F,EAAMmK,kBAAkB9Q,KAAI,SAAA+Q,GACpC,IAAMC,EAAqBvK,IAAEzF,OAAO+P,EAAcH,OAAO9D,QACvD,SAAApO,GACE,QAASA,EAAKkH,kBAEhB,GACIqL,EACJD,GAAsBA,EAAmBpL,eACrCoL,EAAmBpL,eAAexE,WAClC,KACN,OACE,kBAACpG,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAS,EACTF,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAACsS,MAAO,CAAEsD,SAAU,IAC5B,kBAAClW,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRE,QAAS,EACTD,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,CAAY8L,QAAQ,aACjB0J,EAAcP,QAAQ5F,YAG3B,kBAAC5P,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,CAAY8L,QAAQ,aACjB4D,GACC,IAAIxJ,KAAKsP,EAAcP,QAAQpG,YAE/B,MACAa,GACE,IAAIxJ,KAAKsP,EAAcP,QAAQ3F,aAKxCpE,IAAEzF,OAAO+P,EAAcH,OAAO5Q,KAAI,SAAAtB,GACjC,OACE,kBAAC,GAAD,CACE8M,eAAgBA,EAChB9M,KAAMA,EACN4N,cAAe5N,EAAKH,SAAW6R,EAC/BnE,YACET,EAAetJ,MAAMkD,SAASK,QAAQ2K,GAExC7D,QAAQ,WACRF,qBAAqB,QAK5B4E,GACC,kBAACjW,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC6V,GAAA,EAAD,CACEzJ,MAAM,UACN0J,aAAW,mCACXV,KAAMO,EACNzJ,OAAO,UAEP,kBAAC,KAAD,c,SC9FX,SAAS6J,GACdxL,GAEA,GAAIA,EAAqB,CACvB,IAAM4G,EAAiBhL,KAAKC,MAa5B,OAXwBmE,EAAoBiH,QAAO,SAAAC,GACjD,IAEMC,EAFe,IAAIvL,KAAKsL,EAAElC,SACK6B,UACYD,EAG3C6E,EADiB,IAAI7P,KAAKsL,EAAE3C,WACOsC,UAGzC,OAAOM,GAFyBsE,EAAoB7E,KAI/B,GAEvB,OAAO,KCAJ,IAAM8E,GAAsB,SAAC5K,GAIlC,IAAM6E,EAAiB7E,EAAM6E,eAEvB4E,EADczJ,EAAMjI,KACQH,OAC5BiT,ECeD,SACLpM,EACAgL,GACW,IAAD,EAC+ChL,EAASK,QAAzCwG,EADf,EACDmE,GAAgCqB,EAD/B,eACDrB,GADC,UAEJsB,EAAa,CAAIzF,GAAJ,oBAAoBxF,IAAEzF,OAAOyQ,GAAaE,SAEvDC,EAAcnQ,KAAKC,MACnBmQ,EAA6BH,EAAcI,QAC/C,SAACC,EAAsBrT,GAGrB,OADEkT,EAAclT,EAAKgH,WAAwC,IAA3BsM,GAEzB,eACFD,EADL,eAEGrT,EAAKH,OAASG,IAGVqT,IAGX,IAGI1B,EAA+BqB,EAAcI,QACjD,SAACG,EAAuBvT,GAEtB,IAD0BmT,EAAanT,EAAKH,SACpBG,EAAKkH,eAAgB,CAC3C,IAAMsM,EAAmBxT,EAAKkH,eACxBuM,EACJF,EAAsBC,EAAiBE,WACnCC,EAAuBF,EACzBA,EAAgBvB,MAChB,GACJ,OAAO,eACFqB,EADL,eAEGC,EAAiBE,UAAY,CAC5B5B,QAAS0B,EACTtB,MAAM,eACDyB,EADA,eAEF3T,EAAKH,OAASG,OAKrB,OAAOuT,IAGX,IAGInB,EAAqCY,EAAcI,QACvD,SAACQ,EAA0B5T,GACzB,IAAM6T,GAAoBV,EAAanT,EAAKH,QACtCiU,EAAuBnB,GAC3B3S,EAAKmH,qBAEP,GAAI0M,GAAsBC,EAAsB,CAC9C,IAAMC,EACJH,EAAyBE,EAAqB5T,IAC1C8T,EAA6BD,EAC/BA,EAAsB7B,MACtB,GACJ,OAAO,eACF0B,EADL,eAEGE,EAAqB5T,GAAK,CACzB4R,QAASgC,EACT5B,MAAM,eACD8B,EADA,eAEFhU,EAAKH,OAASG,OAKrB,OAAO4T,IAGX,IAGIK,EAA+BjB,EAAcI,QACjD,SAACc,EAAwBlU,GACvB,IAAM6T,GAAoBV,EAAanT,EAAKH,QACtCsU,GAAqCnU,EAAKkH,eAC1CkN,GAAsCzB,GAC1C3S,EAAKmH,qBAEDkN,EAAoD,cAA5BrU,EAAKiH,mBACnC,OACE4M,GACAM,GACAC,GACAC,EAEO,eACFH,EADL,eAEGlU,EAAKH,OAASG,IAGVkU,IAGX,IAGII,EAA0BtB,EAAcI,QAC5C,SAACmB,EAAmBvU,GAClB,IAAM6T,GAAoBV,EAAanT,EAAKH,QACtCsU,GAAqCnU,EAAKkH,eAC1CkN,GAAsCzB,GAC1C3S,EAAKmH,qBAEDqN,EAA+C,SAA5BxU,EAAKiH,mBAC9B,OACE4M,GACAM,GACAC,GACAI,EAEO,eACFD,EADL,eAEGvU,EAAKH,OAASG,IAGVuU,IAGX,IAGF,MAAO,CACLE,QAAStB,EACTuB,MAAO/C,EACP/G,SAAUwH,EACVuC,UAAWV,EACXW,KAAMN,GDtJWO,CACjB/H,EAAetJ,MAAMkD,SACrBgL,GAGF,OACE,kBAACpV,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASG,QAAS,EAAGF,QAAQ,UACrD,kBAACH,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,KACE,yCAEDkL,IAAEzF,OAAOwQ,EAAW6B,WAAWrT,KAAI,SAAAtB,GAClC,OACE,kBAAC,GAAD,CACE8M,eAAgBA,EAChB9M,KAAMA,EACN4N,cAAe5N,EAAKH,SAAW6R,EAC/BnE,YAAaT,EAAetJ,MAAMkD,SAASK,QAAQ2K,GACnD7D,QAAQ,YACRF,oBAAqB3N,EAAKH,SAAW6R,QAK7C,kBAACpV,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,GAAD,CACEkQ,eAAgBA,EAChB4E,cAAeA,EACfC,cAAemB,EAAW4B,SAG9B,kBAACpY,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,GAAD,CACEkQ,eAAgBA,EAChB4E,cAAeA,EACfU,iBAAkBU,EAAWlI,YAGjC,kBAACtO,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACC,EAAA,EAAD,KACE,uCAEDkL,IAAEzF,OAAOwQ,EAAW2B,SAASnT,KAAI,SAAAtB,GAChC,OACE,kBAAC,GAAD,CACE8M,eAAgBA,EAChB9M,KAAMA,EACN4N,cAAe5N,EAAKH,SAAW6R,EAC/BnE,YAAaT,EAAetJ,MAAMkD,SAASK,QAAQ2K,GACnD7D,QAAQ,UACRF,oBAAqB3N,EAAKH,SAAW6R,QAK7C,kBAACpV,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyM,EAAA,EAAD,SEtEKiK,GCda,IDgBbwB,GAAY,SAAC7M,GACxB,IAAMC,EAAWC,qBAAWnE,GACtB8I,Ed8BD,SAA2BpG,GAA0B,IAAD,EAC/B2B,qBAAW9E,GAAS,CAC5CmD,WACA4C,4BAA6B,IAH0B,mBAKzD,MAAO,CAAE9F,MALgD,KAKzC8E,SALyC,Mc9BlCyM,CAAkB9M,EAAMiB,SAASC,iBA4CxD,OA3CAlF,IAAMkJ,WAAU,WAGdpB,GACE9D,EAAMiB,SAASlJ,KAAKH,OACpBiN,EAAetJ,MAAMkD,SAASN,YAEhC,IAAM4O,EAAuB3H,aAAY,WACvCtB,GACE9D,EAAMiB,SAASlJ,KAAKH,OACpBiN,EAAetJ,MAAMkD,SAASN,cAE/B,KAEHF,EAA0ByB,cACxBM,EAAMiB,SAASlJ,KAAKH,OACpBiN,EAAetJ,MAAMkD,SAASN,YAEhC,IE/BF6O,EACA3M,EF8BQ4M,EAA4B7H,aAAY,WAC5CnH,EAA0ByB,cACxBM,EAAMiB,SAASlJ,KAAKH,OACpBiN,EAAetJ,MAAMkD,SAASN,cAE/BkN,IAGG6B,GEvCRF,EFwCInI,EAAetJ,MAAMkD,SAASN,WEvClCkC,EFwCIwE,EAAexE,SEtCCpC,EAA0BC,cAC5C8O,GACA,SAACvO,GACC4B,EAAS,CACP/F,KAAM,mBACNsE,YAAaH,QFmCX0O,EAA2B/H,aAAY,WAC3CP,EAAexE,SAAS,CACtB/F,KAAM,mCAEP,KACH,OAAO,WACL+K,cAAc0H,GACd1H,cAAc4H,GACdC,IACA7H,cAAc8H,MAEf,IAGD,kBAAC9Y,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,aACXC,QAAS,GAERsL,EAAMiB,SAASE,eACd,kBAAC9M,EAAA,EAAD,CAAMM,MAAI,EAACsS,MAAO,CAAEmG,MAAO,SACzB,kBAACxY,EAAA,EAAD,CAAYmM,MAAM,SAAlB,kEAKJ,kBAAC1M,EAAA,EAAD,CAAMM,MAAI,EAACsS,MAAO,CAAEmG,MAAO,SACzB,kBAAC,GAAD,CACEvI,eAAgBA,EAChB9M,KACE8M,EAAetJ,MAAMkD,SAASK,QAAQkB,EAAMiB,SAASlJ,KAAKH,WAIhE,kBAACvD,EAAA,EAAD,CAAMM,MAAI,EAACsS,MAAO,CAAEmG,MAAO,SACzB,kBAAC,GAAD,CACEvI,eAAgBA,EAChB9M,KACE8M,EAAetJ,MAAMkD,SAASK,QAAQkB,EAAMiB,SAASlJ,KAAKH,WAIhE,kBAACvD,EAAA,EAAD,CAAMM,MAAI,EAACsS,MAAO,CAAEmG,MAAO,SACzB,kBAAC,GAAD,CACEnN,SAAUA,EACV4E,eAAgBA,EAChB9M,KAAMiI,EAAMiB,SAASlJ,UGjGlBsV,GAAc,WAQzB,OAAQ9S,OAAO2C,SAASoQ,MACtB,IAAK,iBACH,MATQ,CACVC,wBAAyB,yBASzB,IAAK,eACH,MARe,CACjBA,wBACE,kEAOF,QACE,MAAM,IAAIxY,MAAJ,8BAAiCwF,OAAO2C,SAASoQ,SCXzDE,GAA4B,IAAI9L,SAAQ,SAACC,EAAS8L,GAChD3Q,EAAwB,cAC1BvC,OAAOmT,QAAQC,UACb,GACA7G,SAAS8G,MACT9Q,EAA2B,cAE7B6E,KAEApH,OAAO2C,SAAS6M,KAAhB,UACEsD,KAAcE,wBADhB,yCAEiChT,OAAO2C,SAAS6M,SAIxC8D,GACI,oBAAAzY,EAAAC,OAAA,kEAAAD,EAAA,MACPoY,IADO,sCCdV,SAAeM,KAAf,iBAAA1Y,EAAAC,OAAA,kEAAAD,EAAA,MACCyY,MADD,yBAAAzY,EAAA,MAEkB2Y,MACrBV,KAAcE,wBAAd,aACA,CACES,YAAa,aALZ,cAEC3K,EAFD,kBAAAjO,EAAA,MAQ8CiO,EAAS4K,QARvD,cAQCC,EARD,yBASEA,GATF,qC,cCCA,SAASC,GACdvW,EACAyI,GAWA,OAToB3I,EAAsBC,UACxCC,GACA,SAACG,GACCsI,EAAS,CACP/F,KAAM,cACNqB,QAAS5D,O,sBCwCV,IAYMqW,GAAuB,WAClC,IAAMnO,E5BfD,WAAwB,IAAD,EACFG,qBAAW9E,EAASF,GADlB,mBAE5B,MAAO,CAAEG,MAFmB,KAEZ8E,SAFY,M4BeXgO,GACjB,OAAQpO,EAAS1E,MAAMF,MACrB,IAAK,UAEH,OArDN,SAA6B4E,GAA7B,gBAAA7K,EAAAC,OAAA,kEAAAD,EAAA,MACmC0Y,MADnC,cACQQ,EADR,OlCjB0BrT,EkCmBdqT,EAAmBzZ,OlClB7BC,EAAUmG,EkCgBZ,WAAA7F,EAAA,MAGQF,EAAoBoZ,EAAmBnZ,cAH/C,yBAAAC,EAAA,MAIqBsC,EAAsBM,iBACvCsW,EAAmBvW,OALvB,UAIQA,EAJR,OAOQwW,EAAezR,EAAwB,WAC5B/E,EAAKY,QARxB,oCAAAvD,EAAA,MASY6I,EAA0BG,YAAYrG,EAAKY,UATvD,gDAUM4V,EAVN,oCAAAnZ,EAAA,MAWYuK,EAAiC5H,EAAMwW,IAXnD,iDAYM,KAZN,6BAQQ9P,EARR,KAaE0P,GAAkBpW,EAAKH,OAAQqI,EAASI,WACpC5B,EAdN,wBAeIR,EAA0BwB,WAAW1H,EAAM0G,EAASN,YAfxD,YAAA/I,EAAA,MAgBoCsC,EAAsBM,iBACpDsW,EAAmBvW,OAjBzB,QAgBUyW,EAhBV,OAmBIvO,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CACXL,KAAM,YACNtD,KAAMyW,EACNtN,gBAAiBzC,EACjB0C,cAAerE,OAzBvB,wBA6BImD,EAASI,SAAS,CAChB/F,KAAM,uBACNoB,YAAa,CAAEL,KAAM,YAAatD,UA/BxC,kClCjBO,IAAmBkD,KkCqEpB1F,CAAc0K,GACP,kBAAC,EAAD,MACT,IAAK,UACH,OAAO,kBAAC,EAAD,MACT,IAAK,YACH,OACE,kBAAClE,EAAgB0S,SAAjB,CAA0B9N,MAAOV,GAC/B,kBAAC,EAAD,CAAWgB,SAAUhB,EAAS1E,SAGpC,IAAK,YACH,OACE,kBAACQ,EAAgB0S,SAAjB,CAA0B9N,MAAOV,GAC/B,kBAAC,GAAD,CAAWgB,SAAUhB,EAAS1E,SAGpC,QACmB0E,EAAS1E,MAC1B,MAAM,IAAIxG,MAAJ,wB,+CCpEGyT,GAjBDkG,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAER5Y,MAAO,CACL4Y,KAAME,KAAIC,MAEZC,WAAY,CACVC,QAAS,WCRfC,IAASC,OACP,kBAACC,GAAA,EAAD,CAAe7G,MAAOA,IACpB,kBAAC8G,GAAA,EAAD,MACA,mBF4CyB,WAC3B,OACE,kBAACC,GAAA,EAAD,CAAWC,SAAS,KAAKvI,MAAO,CAAEwI,UAAW,QAC3C,kBAAC,KAAD,KACE,6BACE,kBAAC,KAAD,CAAOC,KAAK,IAAIC,UAAWvB,UEjDjC,OAEFtH,SAAS8I,eAAe,U","file":"static/js/main.37455528.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const Loading = () => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Typography>Loading</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import { AppConfig } from \"../../../sharedTypes/appConfigTypes\";\n\nexport function setConfig(c: AppConfig) {\n  _config = c;\n}\n\nexport function config(): AppConfig {\n  if (_config) {\n    return _config;\n  } else {\n    throw new Error(\"config not initialized\");\n  }\n}\n\nlet _config: AppConfig | null = null;\n","import firebase from \"firebase\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { config } from \"../config/config\";\n\nexport function firestoreDb() {\n  if (_firestoreDb) {\n    return _firestoreDb;\n  } else {\n    throw new Error(\"firestoreDb not initialized\");\n  }\n}\n\nexport async function initializeFirestore(customToken: string) {\n  firebase.initializeApp({\n    apiKey: config().FIRESTORE_API_KEY,\n    authDomain: config().FIRESTORE_AUTH_DOMAIN,\n    projectId: config().FIRESTORE_PROJECT_ID,\n  });\n  await firebase\n    .auth()\n    .signInWithCustomToken(customToken)\n    .catch(function(error) {\n      const { code, message } = error;\n      console.log(\"firestoreInitialize error\", code, message);\n      throw error;\n    });\n\n  _firestoreDb = firebase.firestore();\n}\n\nlet _firestoreDb: firebase.firestore.Firestore | null = null;\n","import { firestoreDb } from \"./firestoreInitialize\";\nimport { DatabaseCollection } from \"../databaseServices/databaseTypes\";\n\nexport const firestoreApiFactory = <T extends {}>(\n  collection: DatabaseCollection,\n) => {\n  return {\n    get: async (documentPath: string): Promise<T | null> => {\n      const docRef = firestoreDb()\n        .collection(collection)\n        .doc(documentPath);\n\n      const doc = await docRef.get();\n      if (doc.exists) {\n        return doc.data() as T;\n      } else {\n        return null;\n      }\n    },\n    set: async (documentPath: string, entry: T | any): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .set(entry);\n    },\n    update: async (\n      documentPath: string,\n      entry: Partial<T | {}>,\n    ): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .update(entry);\n    },\n    delete: async (documentPath: string) => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .delete();\n    },\n    watch: (documentPath: string, callback: (entry: T | any) => void) => {\n      return firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .onSnapshot(doc => {\n          callback(doc.data() as T);\n        });\n    },\n    batch: () => {\n      return firestoreDb().batch();\n    },\n    docRef: (documentPath: string) => {\n      return firestoreDb()\n        .collection(collection)\n        .doc(documentPath);\n    },\n    collectionRef: (collectionPath: string) => {\n      return firestoreDb().collection(collection);\n    },\n  };\n};\n","import { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { ZoomUser } from \"../../../sharedTypes/zoomTypes\";\nimport {\n  UserEntry,\n  UserNotification,\n  UserNotificationSet,\n} from \"../../../sharedTypes/userEntry\";\nimport firebase from \"firebase\";\n\nconst usersDatabaseApi = firestoreApiFactory<UserEntry>(\"users\");\n\nexport const usersDatabaseAccessor = {\n  watchUser: (userId: string, callback: (appGroup: UserEntry) => void) => {\n    return usersDatabaseApi.watch(userId, callback);\n  },\n  getUser: async (userId: string): Promise<UserEntry | null> => {\n    return await usersDatabaseApi.get(userId);\n  },\n  createUser: async (user: UserEntry) => {\n    return await usersDatabaseApi.set(user.userId, user);\n  },\n  findOrCreateUser: async (user: ZoomUser): Promise<UserEntry> => {\n    const existingUser = await usersDatabaseAccessor.getUser(user.id);\n    if (existingUser) {\n      const userEntry = {\n        ...existingUser,\n        displayName: user.first_name + \" \" + user.last_name,\n        personalMeetingUrl: user.personal_meeting_url,\n        avatarUrl: user.pic_url,\n      };\n      await usersDatabaseApi.update(userEntry.userId, userEntry);\n      return userEntry;\n    } else {\n      const userEntry = {\n        userId: user.id,\n        groupId: null,\n        displayName: user.first_name + \" \" + user.last_name,\n        personalMeetingUrl: user.personal_meeting_url,\n        avatarUrl: user.pic_url,\n        notificationQueue: {},\n      };\n      await usersDatabaseApi.set(userEntry.userId, userEntry);\n      return userEntry;\n    }\n  },\n  updateGroup: async (userId: string, groupId: string | null) => {\n    await usersDatabaseApi.update(userId, { groupId });\n  },\n  pushNotification: async (userId: string, notification: UserNotification) => {\n    const pushNotificationAccessor = {\n      [`notificationQueue.${notification.notificationId}`]: notification,\n    };\n    await usersDatabaseApi.update(userId, pushNotificationAccessor);\n  },\n  clearNotifications: async (\n    userId: string,\n    notificationArray: Array<UserNotification>,\n  ) => {\n    const notificationClearBatch = usersDatabaseApi.batch();\n    notificationArray.map(notification => {\n      const userRef = usersDatabaseApi.docRef(userId);\n      notificationClearBatch.update(userRef, {\n        [`notificationQueue.${notification.notificationId}`]: firebase.firestore.FieldValue.delete(),\n      });\n    });\n    await notificationClearBatch.commit();\n  },\n};\n","//from http://stackoverflow.com/a/1349426/439317\nexport function generateRandomString(n: number, possible: string) {\n  var text = \"\";\n  for (var i = 0; i < n; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\nexport function generateRandomAlphaNumericString(n: number) {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomUrlCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomLetterNumericCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript?page=1&tab=votes#tab-top\nexport function uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { usersDatabaseAccessor } from \"../databaseServices/usersDatabaseAccessor\";\nimport {\n  UserEntry,\n  UserNotification,\n  UserNotificationSet,\n} from \"../../../sharedTypes/userEntry\";\nimport { uuidv4 } from \"../utils/generateUtils\";\n\nexport const notification = {\n  notificationsRecieved: (\n    notificationSet: UserNotificationSet,\n    userId: string,\n  ) => {\n    const notificationArray = Object.values(notificationSet);\n    if (notificationArray.length > 0) {\n      notificationArray.map((notification: UserNotification) => {\n        switch (notification.type) {\n          case \"openMeeting\":\n            window.open(notification.meetingUrl, \"_blank\");\n            break;\n          default:\n            console.log(\"unknown notification.type: \", notification.type);\n            const unreachable: never = notification.type;\n        }\n      });\n      usersDatabaseAccessor.clearNotifications(userId, notificationArray);\n    }\n  },\n  sendOpenMeetingNotification: (\n    userId: string,\n    fromUserId: string,\n    meetingUrl: string,\n  ) => {\n    return usersDatabaseAccessor.pushNotification(userId, {\n      type: \"openMeeting\",\n      meetingUrl,\n      from: \"user\",\n      fromId: fromUserId,\n      timestamp: Date.now(),\n      notificationId: uuidv4(),\n    });\n  },\n};\n","import { AppAction } from \"./appActions\";\nimport { AppState } from \"./appState\";\nimport React, { Dispatch, useReducer } from \"react\";\nimport { notification } from \"../scripts/notification/notification\";\n\nexport type AppStore = {\n  state: AppState;\n  dispatch: Dispatch<AppAction>;\n};\n\nconst initialState: AppState = { view: \"initial\" };\n\nfunction reducer(state: AppState, action: AppAction) {\n  console.log(\"appStoreReducer previous state:\", state);\n  console.log(\"appStoreReducer\", action);\n  switch (action.type) {\n    case \"TRANSITION_APP_STATE\": {\n      return logState(action.newAppState, state);\n    }\n    case \"UPDATE_USER\": {\n      switch (state.view) {\n        case \"joinGroup\":\n        case \"mainGroup\":\n          return logState(\n            {\n              ...state,\n              user: action.newUser,\n            },\n            state,\n          );\n        case \"initial\":\n        case \"loading\":\n          return state;\n        default:\n          const _: never = state;\n          return state;\n      }\n    }\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n}\nfunction logState(newState: AppState, oldState: AppState) {\n  console.log(\"appStoreReducer computed state\", newState);\n  runEffects(newState, oldState);\n  return newState;\n}\n\n// Container\nexport const AppStoreContext = React.createContext<AppStore>(null as any);\n\nexport function useAppStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n\nfunction runEffects(newState: AppState, oldState: AppState) {\n  switch (newState.view) {\n    case \"joinGroup\":\n    case \"mainGroup\":\n      notification.notificationsRecieved(\n        newState.user.notificationQueue,\n        newState.user.userId,\n      );\n      break;\n    case \"initial\":\n    case \"loading\":\n      break;\n    default:\n      const _: never = newState;\n  }\n}\n","import { JoinGroupAction } from \"./joinGroupAction\";\nimport { JoinGroupState } from \"./joinGroupState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type JoinGroupStore = {\n  state: JoinGroupState;\n  dispatch: Dispatch<JoinGroupAction>;\n};\n\nconst initialState: JoinGroupState = { joinId: \"\" };\n\nfunction reducer(state: JoinGroupState, action: JoinGroupAction) {\n  console.log(\"joinGroupStoreReducer previous state:\", state);\n  console.log(\"joinGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_JOIN_ID\": {\n      return logState({\n        ...state,\n        joinId: action.newJoinId,\n      });\n      break;\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: JoinGroupState) {\n  console.log(\"joinGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const JoinGroupStoreContext = React.createContext<JoinGroupStore>(\n  null as any,\n);\n\nexport function useJoinGroupStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","type LocalStorageItem = {\n  popupsArentBlocked: boolean;\n};\n\ntype ValueOfLocalStorage = LocalStorageItem[keyof LocalStorageItem];\n\nexport const localStorageUtils = {\n  getItem: (itemKey: keyof LocalStorageItem): ValueOfLocalStorage | null => {\n    const maybeItemValue = localStorage.getItem(itemKey);\n    return maybeItemValue ? JSON.parse(maybeItemValue) : null;\n  },\n  setItem: (\n    itemKey: keyof LocalStorageItem,\n    itemValue: ValueOfLocalStorage,\n  ) => {\n    localStorage.setItem(itemKey, JSON.stringify(itemValue));\n  },\n};\n","import { localStorageUtils } from \"./localStorageUtils\";\nimport queryString from \"querystring\";\n\nexport const windowUtils = {\n  getUrlParam: (urlParamKey: string): string | null => {\n    const urlParams = queryString.parse(window.location.search.slice(1));\n    const parsedParam = urlParams ? urlParams[urlParamKey] : null;\n    return parsedParam instanceof Array ? parsedParam[0] : parsedParam;\n  },\n  addUrlParam: (urlParamKey: string, urlParamValue: string) => {\n    const urlParams = queryString.parse(window.location.search.slice(1));\n    const newParams = { ...urlParams, [urlParamKey]: urlParamValue };\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?\" +\n      queryString.stringify(newParams)\n    );\n  },\n  removeUrlParam: (urlParamKey: string): string => {\n    const urlSearchParams = queryString.parse(window.location.search.slice(1));\n    const { [urlParamKey]: val, ...paramsWithoutKey } = urlSearchParams;\n    const newSearch =\n      Object.keys(paramsWithoutKey).length > 0\n        ? \"?\" + queryString.stringify(paramsWithoutKey)\n        : \"\";\n    return window.location.origin + window.location.pathname + newSearch;\n  },\n  testPopupsBlocked: (): boolean => {\n    const popupsArentBlocked = localStorageUtils.getItem(\"popupsArentBlocked\");\n    if (popupsArentBlocked) {\n      return false;\n    } else {\n      const newWindow = window.open(\"\", \"_blank\");\n      try {\n        if (newWindow) {\n          newWindow.close();\n          localStorageUtils.setItem(\"popupsArentBlocked\", true);\n          return false;\n        } else {\n          return true;\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n  },\n};\n","import { UserEntry } from \"./../../../sharedTypes/userEntry.d\";\nimport {\n  AppGroupEntry,\n  CalendarMeeting,\n  AppGroupUser,\n} from \"./../../../sharedTypes/appGroupEntry.d\";\nimport firebase from \"firebase\";\nimport { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { generateRandomAlphaNumericString } from \"../utils/generateUtils\";\n\nconst appGroupsDatabaseApi = firestoreApiFactory<AppGroupEntry>(\"appGroups\");\n\nexport const appGroupsDatabaseAccessor = {\n  watchAppGroup: (\n    appGroupId: string,\n    callback: (appGroup: AppGroupEntry) => void,\n  ) => {\n    return appGroupsDatabaseApi.watch(appGroupId, callback);\n  },\n  getAppGroup: async (appGroupId: string): Promise<AppGroupEntry | null> => {\n    return await appGroupsDatabaseApi.get(appGroupId);\n  },\n  getExistingAppGroup: async (appGroupId: string): Promise<AppGroupEntry> => {\n    const existingGroup = await appGroupsDatabaseApi.get(appGroupId);\n    if (existingGroup) {\n      return existingGroup;\n    } else {\n      throw new Error(\n        \"getExistingAppGroup: group doesn't exist with id:\" + appGroupId,\n      );\n    }\n  },\n  deleteAppGroup: async (appGroupId: string) => {\n    return await appGroupsDatabaseApi.delete(appGroupId);\n  },\n  createAppGroup: async (appGroup: AppGroupEntry) => {\n    return await appGroupsDatabaseApi.set(appGroup.appGroupId, appGroup);\n  },\n  createNewAppGroup: async (firstUser: UserEntry) => {\n    const newAppGroup: AppGroupEntry = {\n      appGroupId: \"G\" + generateRandomAlphaNumericString(5).toUpperCase(),\n      userIds: {\n        [firstUser.userId]: {\n          ...firstUser,\n          userId: firstUser.userId,\n          lastOnline: Date.now(),\n\n          availabilityStatus: \"available\",\n          currentMeeting: null,\n          dailyCalendarEvents: null,\n        },\n      },\n    };\n    await appGroupsDatabaseApi.set(newAppGroup.appGroupId, newAppGroup);\n    return newAppGroup;\n  },\n  userJoinExistingAppGroup: async (user: UserEntry, groupId: string) => {\n    const appGroupUser: AppGroupUser = {\n      ...user,\n      userId: user.userId,\n      lastOnline: Date.now(),\n      availabilityStatus: \"available\",\n      currentMeeting: null,\n      dailyCalendarEvents: null,\n    };\n    const updateGroupAccessor = {\n      [`userIds.${user.userId}`]: appGroupUser,\n    };\n    appGroupsDatabaseApi.update(groupId, updateGroupAccessor);\n    return appGroupsDatabaseAccessor.getExistingAppGroup(groupId);\n  },\n  removeUserFromAppGroup: async (appGroup: AppGroupEntry, user: UserEntry) => {\n    await appGroupsDatabaseApi.update(appGroup.appGroupId, {\n      [`userIds.${user.userId}`]: firebase.firestore.FieldValue.delete(),\n    });\n  },\n  setUserCalendarEvents(\n    userId: string,\n    appGroupId: string,\n    calendarEvents: Array<CalendarMeeting>,\n  ) {\n    const updateGroupAccessor = {\n      [`userIds.${userId}.dailyCalendarEvents`]: calendarEvents,\n    };\n    appGroupsDatabaseApi.update(appGroupId, updateGroupAccessor);\n  },\n  updateUser(user: UserEntry, appGroupId: string) {\n    const updateGroupAccessor = {\n      [`userIds.${user.userId}.avatarUrl`]: user.avatarUrl,\n      [`userIds.${user.userId}.displayName`]: user.displayName,\n      [`userIds.${user.userId}.groupId`]: user.groupId,\n      [`userIds.${user.userId}.personalMeetingUrl`]: user.personalMeetingUrl,\n    };\n    appGroupsDatabaseApi.update(appGroupId, updateGroupAccessor);\n  },\n  sendAlivePing: (userId: string, appGroupId: string) => {\n    const updateGroupAccessor = {\n      [`userIds.${userId}.lastOnline`]: Date.now(),\n    };\n    appGroupsDatabaseApi.update(appGroupId, updateGroupAccessor);\n  },\n};\n","import { AppGroupEntry } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { appGroupsDatabaseAccessor } from \"./appGroupsDatabaseAccessor\";\nimport { usersDatabaseAccessor } from \"./usersDatabaseAccessor\";\nimport _ from \"underscore\";\nimport { UserEntry } from \"../../../sharedTypes/userEntry\";\n\nexport const databaseService = {\n  createGroup: async (user: UserEntry): Promise<AppGroupEntry> => {\n    const newGroup = await appGroupsDatabaseAccessor.createNewAppGroup(user);\n    await usersDatabaseAccessor.updateGroup(user.userId, newGroup.appGroupId);\n    return newGroup;\n  },\n  userTryJoinGroup: async (\n    user: UserEntry,\n    groupId: string,\n  ): Promise<AppGroupEntry | null> => {\n    const existingGroup = await appGroupsDatabaseAccessor.getAppGroup(groupId);\n    if (existingGroup) {\n      const group = await appGroupsDatabaseAccessor.userJoinExistingAppGroup(\n        user,\n        groupId,\n      );\n      await usersDatabaseAccessor.updateGroup(user.userId, groupId);\n      return group;\n    } else {\n      return null;\n    }\n  },\n  userLeaveGroup: async (user: UserEntry, appGroup: AppGroupEntry) => {\n    await usersDatabaseAccessor.updateGroup(user.userId, null);\n    await appGroupsDatabaseAccessor.removeUserFromAppGroup(appGroup, user);\n    const group = await appGroupsDatabaseAccessor.getAppGroup(\n      appGroup.appGroupId,\n    );\n    if (group && group.userIds && _.values(group.userIds).length === 0) {\n      // no users left in group\n      await appGroupsDatabaseAccessor.deleteAppGroup(group.appGroupId);\n    }\n  },\n};\n","import React, { useContext } from \"react\";\nimport { AppStoreContext } from \"../appStore\";\nimport { useJoinGroupStore } from \"./joinGroupStore\";\nimport { windowUtils } from \"../../scripts/utils/windowUtils\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { databaseService } from \"../../scripts/databaseServices/databaseService\";\nimport { JoinGroupAppState } from \"../appState\";\n\nexport const JoinGroup = (props: { appState: JoinGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const joinGroupStore = useJoinGroupStore();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <TextField\n              label=\"Group Id\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={joinGroupStore.state.joinId}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                joinGroupStore.dispatch({\n                  type: \"UPDATE_JOIN_ID\",\n                  newJoinId: e.target.value.toUpperCase(),\n                });\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                appStore.dispatch({\n                  type: \"TRANSITION_APP_STATE\",\n                  newAppState: { view: \"loading\" },\n                });\n                const group = await databaseService.userTryJoinGroup(\n                  props.appState.user,\n                  joinGroupStore.state.joinId,\n                );\n                if (group) {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: {\n                      view: \"mainGroup\",\n                      user: {\n                        ...props.appState.user,\n                        groupId: group.appGroupId,\n                      },\n                      initialAppGroup: group,\n                      popupsBlocked: windowUtils.testPopupsBlocked(),\n                    },\n                  });\n                } else {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: props.appState,\n                  });\n                  // group doesn't exist effect\n                  console.log(\"group doesn't exist\");\n                }\n              }}\n            >\n              Join\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={async () => {\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: { view: \"loading\" },\n            });\n            const group = await databaseService.createGroup(\n              props.appState.user,\n            );\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: {\n                view: \"mainGroup\",\n                user: { ...props.appState.user, groupId: group.appGroupId },\n                initialAppGroup: group,\n                popupsBlocked: windowUtils.testPopupsBlocked(),\n              },\n            });\n          }}\n        >\n          Create Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import { MainGroupAction } from \"./mainGroupAction\";\nimport React, { Dispatch, useReducer } from \"react\";\nimport {\n  AppGroupEntry,\n  VideoMeeting,\n  CalendarMeeting,\n} from \"./../../../sharedTypes/appGroupEntry.d\";\n\nexport type MainGroupState = {\n  appGroup: AppGroupEntry;\n  lastCheckForMeetingUIUpdate: number;\n};\n\nexport type MainGroupStore = {\n  state: MainGroupState;\n  dispatch: Dispatch<MainGroupAction>;\n};\n\nfunction reducer(state: MainGroupState, action: MainGroupAction) {\n  console.log(\"mainGroupStoreReducer previous state:\", state);\n  console.log(\"mainGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_APP_GROUP\":\n      return logState({\n        ...state,\n        appGroup: action.newAppGroup,\n      });\n    case \"CHECK_FOR_MEETINGS_UI_UPDATE\":\n      return logState({\n        ...state,\n        lastCheckForMeetingUIUpdate: Date.now(),\n      });\n    default: {\n      const _: never = action;\n      return state;\n    }\n  }\n}\nfunction logState(newState: MainGroupState) {\n  console.log(\"mainGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const MainGroupStoreContext = React.createContext<MainGroupStore>(\n  null as any,\n);\n\nexport function useMainGroupStore(appGroup: AppGroupEntry) {\n  const [state, dispatch] = useReducer(reducer, {\n    appGroup,\n    lastCheckForMeetingUIUpdate: 0,\n  });\n  return { state, dispatch };\n}\n","import { config } from \"../config/config\";\n\nlet _gapiClientLoaded: Promise<void> | null = null;\n\nexport async function ensureGapiClient(): Promise<typeof gapi.client> {\n  if (_gapiClientLoaded) {\n    await _gapiClientLoaded;\n    return gapi.client;\n  } else {\n    _gapiClientLoaded = initClient();\n    await _gapiClientLoaded;\n    return gapi.client;\n  }\n}\n\nasync function initClient(): Promise<void> {\n  await new Promise((resolve, reject) => {\n    gapi.load(\"client:auth2\", {\n      callback: async () => {\n        try {\n          const initConfig = {\n            apiKey: config().GOOGLE_CALENDAR_API_KEY,\n            clientId: config().GOOGLE_AUTH_CLIENT_ID,\n            discoveryDocs: [\n              \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n            ],\n            scope: \"https://www.googleapis.com/auth/calendar.events.readonly\",\n          };\n          await gapi.client.init(initConfig);\n\n          const authInstance = gapi.auth2.getAuthInstance();\n          const notSignedIn = !authInstance.isSignedIn.get();\n          if (notSignedIn) {\n            await authInstance.signIn();\n          }\n          resolve();\n        } catch (e) {\n          _gapiClientLoaded = null;\n          reject(e);\n        }\n      },\n    });\n  });\n}\n","import { ensureGapiClient } from \"./ensureGapiClient\";\n\nexport const gapiCalendar = {\n  listUpcomingEvents: async (): Promise<Array<gapi.client.calendar.Event>> => {\n    const gapiClient = await ensureGapiClient();\n    const response = await gapiClient.calendar.events.list({\n      calendarId: \"primary\",\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: \"startTime\",\n    });\n\n    const eventsResult: gapi.client.calendar.Events = response.result;\n    const events = eventsResult.items || [];\n    console.log(\"Upcoming events:\", events);\n    events.map(e => {\n      const startTime = e.start ? e.start.dateTime || e.start.date : null;\n      console.log(e.summary + \" (\" + startTime + \")\");\n    });\n    return events;\n  },\n};\n","import { CalendarMeeting } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { gapiCalendar } from \"./../../scripts/gapi/gapiCalendar\";\nimport { appGroupsDatabaseAccessor } from \"../../scripts/databaseServices/appGroupsDatabaseAccessor\";\n\nexport const mainGroupActionCreator = {\n  syncCalendarEvents: async (userId: string, appGroupId: string) => {\n    const events: Array<\n      gapi.client.calendar.Event\n    > = await gapiCalendar.listUpcomingEvents();\n    const calendarEvents = events.map(convertGapiCalendarEventToCalendarEvent);\n    appGroupsDatabaseAccessor.setUserCalendarEvents(\n      userId,\n      appGroupId,\n      calendarEvents,\n    );\n  },\n};\n\nfunction convertGapiCalendarEventToCalendarEvent(\n  gapiCalendarEvent: gapi.client.calendar.Event,\n): CalendarMeeting {\n  const id = gapiCalendarEvent.id;\n  const eventName = gapiCalendarEvent.summary;\n  const startTime = gapiCalendarEvent.start\n    ? gapiCalendarEvent.start.dateTime || gapiCalendarEvent.start.date\n    : null;\n  const endTime = gapiCalendarEvent.end\n    ? gapiCalendarEvent.end.dateTime || gapiCalendarEvent.end.date\n    : null;\n  const eventLink = gapiCalendarEvent.htmlLink;\n  if (id && eventName && startTime && endTime && eventLink) {\n    return {\n      id,\n      eventName,\n      startTime,\n      endTime,\n      eventLink,\n    };\n  } else {\n    console.log(\"gapi calendar event\", gapiCalendarEvent);\n    throw new Error(\"gapi calendar event is missing properties\");\n  }\n}\n","export const dateUtils = {\n  dateToLocalTimeStringHMMeridiem: (date: Date): string => {\n    return (\n      date.toLocaleTimeString().slice(0, -6) +\n      date.toLocaleTimeString().slice(-2)\n    );\n  },\n  timeHoursAndMinutes: (timeInMS: number): string => {\n    const minutes = Math.floor(timeInMS / 60000);\n    const minutesRemainder = minutes % 60;\n    const hours = Math.floor(minutes / 60);\n    const hoursString = hours > 0 ? `${hours}:` : \"\";\n    const minutesString =\n      minutesRemainder < 10 ? \"0\" + minutesRemainder : minutesRemainder;\n    return hoursString + minutesString;\n  },\n};\n","import React, { useState } from \"react\";\nimport { Grid, Typography, Button, Avatar } from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport {\n  CalendarMeeting,\n  AppGroupUser,\n} from \"../../../../sharedTypes/appGroupEntry\";\nimport { dateUtils } from \"../../../scripts/utils/dateUtils\";\nimport { notification } from \"../../../scripts/notification/notification\";\nimport { MainGroupSection } from \"../mainGroupTypes\";\n\nconst NOT_SYNCED_MESSAGE = \"Calendar not synced\";\nconst NO_UPCOMING_EVENTS_MESSAGE = \"No upcoming events\";\n\nexport const UserAvatarNameRow = (props: {\n  mainGroupStore: MainGroupStore;\n  user: AppGroupUser;\n  isCurrentUser: boolean;\n  currentUser: AppGroupUser;\n  section: MainGroupSection;\n  showNextMeetingTime: boolean;\n}) => {\n  const dailyCalendarEvents =\n    props.mainGroupStore.state.appGroup.userIds[props.user.userId]\n      .dailyCalendarEvents;\n  const [nextMeetingTimeString, updateNextMeetingTimeString] = useState(\n    getNextMeetingTimeString(dailyCalendarEvents),\n  );\n\n  React.useEffect(() => {\n    // component mount\n\n    updateNextMeetingTimeString(getNextMeetingTimeString(dailyCalendarEvents));\n    const updateMeetingTimeInterval = setInterval(() => {\n      updateNextMeetingTimeString(\n        getNextMeetingTimeString(dailyCalendarEvents),\n      );\n    }, 10 * 1000);\n\n    return () => {\n      // component dismount\n      clearInterval(updateMeetingTimeInterval);\n    };\n  }, [\n    props.mainGroupStore.state.appGroup.userIds[props.user.userId]\n      .dailyCalendarEvents,\n  ]);\n  console.log(props.currentUser.personalMeetingUrl);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Avatar alt={props.user.displayName} src={props.user.avatarUrl} />\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" spacing={0} justify=\"flex-start\">\n          <Grid item>\n            <Typography>{props.user.displayName}</Typography>\n          </Grid>\n          {props.showNextMeetingTime && (\n            <Grid item>\n              {props.isCurrentUser &&\n              nextMeetingTimeString === \"Calendar not synced\" ? (\n                <Typography variant=\"caption\" color=\"error\">\n                  <i>{nextMeetingTimeString}</i>\n                </Typography>\n              ) : (\n                <Typography variant=\"caption\">\n                  <i>{nextMeetingTimeString}</i>\n                </Typography>\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n      {props.section === \"available\" &&\n        props.currentUser.personalMeetingUrl &&\n        !props.isCurrentUser && (\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={async () => {\n                const meetingUrl = props.currentUser.personalMeetingUrl;\n                notification.sendOpenMeetingNotification(\n                  props.user.userId,\n                  props.currentUser.userId,\n                  meetingUrl,\n                );\n                window.open(meetingUrl, \"_blank\");\n              }}\n            >\n              Call\n            </Button>\n          </Grid>\n        )}\n      {!props.currentUser.personalMeetingUrl &&\n        props.isCurrentUser &&\n        props.section === \"available\" && (\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={async () => {\n                window.open(\"https://zoom.us/profile\", \"_blank\");\n              }}\n            >\n              Acquire Meeting Url\n            </Button>\n          </Grid>\n        )}\n    </Grid>\n  );\n};\n\nfunction getNextMeetingTimeString(\n  dailyCalendarEvents: Array<CalendarMeeting> | null,\n): string {\n  if (dailyCalendarEvents === null) {\n    return NOT_SYNCED_MESSAGE;\n  } else {\n    // first, filter all meetings that ended in the past, and do not start today\n    const currentDateObj = new Date();\n    const currentTimeNum = currentDateObj.getTime();\n    const currentDateString = currentDateObj.toDateString();\n\n    const upcomingMeetings = dailyCalendarEvents.filter(m => {\n      const localEndTime = new Date(m.endTime);\n      const localEndTimeNum = localEndTime.getTime();\n      const meetingEndsInTheFuture = localEndTimeNum > currentTimeNum;\n\n      const localStartTime = new Date(m.startTime);\n      const localStartTimeDate = localStartTime.toDateString();\n      const meetingStartsToday = localStartTimeDate === currentDateString;\n\n      return meetingEndsInTheFuture && meetingStartsToday;\n    });\n\n    const nextMeeting = upcomingMeetings[0];\n    if (nextMeeting) {\n      const localStartTime = new Date(nextMeeting.startTime);\n      const localEndTime = new Date(nextMeeting.endTime);\n\n      const localStartTimeNum = localStartTime.getTime();\n      const meetingStartedInThePast = localStartTimeNum < currentTimeNum;\n\n      const startTimeString = dateUtils.dateToLocalTimeStringHMMeridiem(\n        localStartTime,\n      );\n      const endTimeString = dateUtils.dateToLocalTimeStringHMMeridiem(\n        localEndTime,\n      );\n\n      const nextMeetingTimeString = meetingStartedInThePast\n        ? `${nextMeeting.eventName} ends at ${endTimeString}`\n        : `Next meeting at ${startTimeString}`;\n      return nextMeetingTimeString;\n    } else {\n      return NO_UPCOMING_EVENTS_MESSAGE;\n    }\n  }\n}\n","// SRC: https://github.com/sindresorhus/copy-text-to-clipboard/blob/master/index.js\n// MIT license\n\nexport const copyUtils = {\n  copyToClipboard: (text: string) => {\n    const el = document.createElement(\"textarea\") as any;\n\n    el.value = text;\n\n    // Prevent keyboard from showing on mobile\n    el.setAttribute(\"readonly\", \"\");\n\n    el.style.contain = \"strict\";\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    el.style.fontSize = \"12pt\"; // Prevent zooming on iOS\n\n    const selection = document.getSelection();\n    let originalRange = null;\n    if (selection && selection.rangeCount > 0) {\n      originalRange = selection.getRangeAt(0);\n    }\n\n    /* $FlowSupressErrorBecauseOfRequireAbuse */\n    document.body.appendChild(el);\n    el.select();\n\n    // Explicit selection workaround for iOS\n    el.selectionStart = 0;\n    el.selectionEnd = text.length;\n\n    let success = false;\n    try {\n      success = document.execCommand(\"copy\");\n    } catch (err) {}\n\n    /* $FlowSupressErrorBecauseOfRequireAbuse */\n    document.body.removeChild(el);\n\n    if (selection && originalRange) {\n      selection.removeAllRanges();\n      selection.addRange(originalRange);\n    }\n\n    return success;\n  },\n};\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Button, Divider, Avatar } from \"@material-ui/core\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { mainGroupActionCreator } from \"../mainGroupActionCreator\";\nimport { UserEntry } from \"../../../../sharedTypes/userEntry\";\nimport { UserAvatarNameRow } from \"./UserAvatarNameRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppGroupUser } from \"../../../../sharedTypes/appGroupEntry\";\nimport { copyUtils } from \"../../../scripts/utils/copyUtils\";\nimport { windowUtils } from \"../../../scripts/utils/windowUtils\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    transform: \"rotate(135deg)\",\n  },\n}));\n\nexport const MainGroupHeader = (props: {\n  mainGroupStore: MainGroupStore;\n  user: AppGroupUser;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2} justify=\"center\">\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={3}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => {\n                const joinGroupUrl =\n                  window.location.origin +\n                  window.location.pathname +\n                  \"?joinId=\" +\n                  props.mainGroupStore.state.appGroup.appGroupId;\n                copyUtils.copyToClipboard(joinGroupUrl);\n              }}\n            >\n              {props.mainGroupStore.state.appGroup.appGroupId}\n              <LinkIcon className={classes.icon} />\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={async () => {\n                mainGroupActionCreator.syncCalendarEvents(\n                  props.user.userId,\n                  props.mainGroupStore.state.appGroup.appGroupId,\n                );\n              }}\n            >\n              Sync Google Calendar\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <UserAvatarNameRow\n          user={props.user}\n          mainGroupStore={props.mainGroupStore}\n          isCurrentUser={true}\n          currentUser={props.user}\n          showNextMeetingTime={true}\n          section=\"appHeader\"\n        />\n      </Grid>\n      <Grid item>\n        <Divider></Divider>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Grid, Typography, Button, Divider, Checkbox } from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { mainGroupActionCreator } from \"../mainGroupActionCreator\";\nimport { UserEntry } from \"../../../../sharedTypes/userEntry\";\nimport { AppStore } from \"../../appStore\";\nimport { databaseService } from \"../../../scripts/databaseServices/databaseService\";\n\nexport const MainGroupFooter = (props: {\n  appStore: AppStore;\n  mainGroupStore: MainGroupStore;\n  user: UserEntry;\n}) => {\n  const [leavingConfirmed, updateLeavingConfirmed] = useState(false);\n  return (\n    <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n      <Grid item>\n        <Checkbox\n          checked={leavingConfirmed}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateLeavingConfirmed(event.target.checked);\n          }}\n          color=\"default\"\n          value=\"primary\"\n          inputProps={{ \"aria-label\": \"leave group confirmation\" }}\n        />\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          disabled={!leavingConfirmed}\n          onClick={async () => {\n            props.appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: { view: \"loading\" },\n            });\n            await databaseService.userLeaveGroup(\n              props.user,\n              props.mainGroupStore.state.appGroup,\n            );\n            props.appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: {\n                view: \"joinGroup\",\n                user: { ...props.user, groupId: null },\n              },\n            });\n          }}\n        >\n          Leave Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Divider,\n  IconButton,\n} from \"@material-ui/core\";\nimport { MainGroupStore } from \"../../mainGroupStore\";\nimport { UserAvatarNameRow } from \"../UserAvatarNameRow\";\nimport { VideoMeeting } from \"../../../../../sharedTypes/appGroupEntry.d\";\nimport _ from \"underscore\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport { VideoMeetings } from \"../computeMeetingsUi\";\nimport { dateUtils } from \"../../../../scripts/utils/dateUtils\";\n\nexport const ZoomCallsSection = (props: {\n  mainGroupStore: MainGroupStore;\n  currentUserId: string;\n  videoMeetings: VideoMeetings;\n}) => {\n  const mainGroupStore = props.mainGroupStore;\n  const currentUserId = props.currentUserId;\n\n  return (\n    <Grid container direction=\"column\">\n      <Typography>\n        <b>Zoom Calls</b>\n      </Typography>\n      {_.values(props.videoMeetings).map(videoMeeting => {\n        const meetingLengthInMinutes = dateUtils.timeHoursAndMinutes(\n          Date.now() -\n            new Date(videoMeeting.meeting.meetingStartTime).getTime(),\n        );\n\n        return (\n          <Grid\n            container\n            direction=\"row\"\n            spacing={2}\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Grid\n                container\n                direction=\"row\"\n                spacing={2}\n                justify=\"flex-start\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    href={videoMeeting.meeting.meetingUrl}\n                    target=\"_blank\"\n                  >\n                    Join Meeting <VideocamIcon />\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Typography style={{ display: \"flex\" }}>\n                    {meetingLengthInMinutes}\n                    <ScheduleIcon />\n                  </Typography>\n                </Grid>\n              </Grid>\n              {_.values(videoMeeting.users).map(user => {\n                return (\n                  <UserAvatarNameRow\n                    mainGroupStore={mainGroupStore}\n                    user={user}\n                    isCurrentUser={user.userId === currentUserId}\n                    currentUser={\n                      mainGroupStore.state.appGroup.userIds[currentUserId]\n                    }\n                    section=\"video\"\n                    showNextMeetingTime={\n                      user.userId === currentUserId ? false : true\n                    }\n                  />\n                );\n              })}\n            </Grid>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Divider,\n  IconButton,\n} from \"@material-ui/core\";\nimport { MainGroupStore } from \"../../mainGroupStore\";\nimport { UserAvatarNameRow } from \"../UserAvatarNameRow\";\nimport { VideoMeeting } from \"../../../../../sharedTypes/appGroupEntry.d\";\nimport _ from \"underscore\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport { CalendarMeetings } from \"../computeMeetingsUi\";\nimport { dateUtils } from \"../../../../scripts/utils/dateUtils\";\n\nexport const GoogleCalendarEventsSection = (props: {\n  mainGroupStore: MainGroupStore;\n  currentUserId: string;\n  calendarMeetings: CalendarMeetings;\n}) => {\n  const mainGroupStore = props.mainGroupStore;\n  const currentUserId = props.currentUserId;\n\n  return (\n    <Grid container direction=\"column\">\n      <Typography>\n        <b>Google Calendar Events</b>\n      </Typography>\n      {_.values(props.calendarMeetings).map(calendarEvent => {\n        const firstUserInMeeting = _.values(calendarEvent.users).filter(\n          user => {\n            return !!user.currentMeeting;\n          },\n        )[0];\n        const firstUserMeetingUrl =\n          firstUserInMeeting && firstUserInMeeting.currentMeeting\n            ? firstUserInMeeting.currentMeeting.meetingUrl\n            : null;\n        return (\n          <Grid\n            container\n            direction=\"row\"\n            spacing={2}\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item style={{ flexGrow: 1 }}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-start\"\n                spacing={1}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Typography variant=\"subtitle2\">\n                    {calendarEvent.meeting.eventName}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"subtitle2\">\n                    {dateUtils.dateToLocalTimeStringHMMeridiem(\n                      new Date(calendarEvent.meeting.startTime),\n                    ) +\n                      \" - \" +\n                      dateUtils.dateToLocalTimeStringHMMeridiem(\n                        new Date(calendarEvent.meeting.endTime),\n                      )}\n                  </Typography>\n                </Grid>\n              </Grid>\n              {_.values(calendarEvent.users).map(user => {\n                return (\n                  <UserAvatarNameRow\n                    mainGroupStore={mainGroupStore}\n                    user={user}\n                    isCurrentUser={user.userId === currentUserId}\n                    currentUser={\n                      mainGroupStore.state.appGroup.userIds[currentUserId]\n                    }\n                    section=\"calendar\"\n                    showNextMeetingTime={false}\n                  />\n                );\n              })}\n            </Grid>\n            {firstUserMeetingUrl && (\n              <Grid item>\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"join calendar meeting video call\"\n                  href={firstUserMeetingUrl}\n                  target=\"_blank\"\n                >\n                  <VideocamIcon />\n                </IconButton>\n              </Grid>\n            )}\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n","import { CalendarMeeting } from \"../../../../sharedTypes/appGroupEntry\";\n\nexport function getCurrentCalendarEvent(\n  dailyCalendarEvents: Array<CalendarMeeting> | null,\n): null | CalendarMeeting {\n  if (dailyCalendarEvents) {\n    const currentTimeNum = Date.now();\n\n    const currentMeetings = dailyCalendarEvents.filter(m => {\n      const localEndTime = new Date(m.endTime);\n      const localEndTimeNum = localEndTime.getTime();\n      const meetingEndsInTheFuture = localEndTimeNum > currentTimeNum;\n\n      const localStartTime = new Date(m.startTime);\n      const localStartTimeNum = localStartTime.getTime();\n      const meetingStartedInThePast = localStartTimeNum < currentTimeNum;\n\n      return meetingEndsInTheFuture && meetingStartedInThePast;\n    });\n    return currentMeetings[0];\n  } else {\n    return null;\n  }\n}\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Divider,\n  IconButton,\n} from \"@material-ui/core\";\nimport { MainGroupStore } from \"../mainGroupStore\";\nimport { UserAvatarNameRow } from \"./UserAvatarNameRow\";\nimport {\n  AppGroupEntry,\n  VideoMeeting,\n  CalendarMeeting,\n  AppGroupUser,\n} from \"../../../../sharedTypes/appGroupEntry.d\";\nimport _ from \"underscore\";\nimport { ZoomCallsSection } from \"./meetingUISections/ZoomCallsSection\";\nimport { GoogleCalendarEventsSection } from \"./meetingUISections/GoogleCalendarEventsSection\";\nimport { computeMeetingsUi } from \"./computeMeetingsUi\";\n\nexport const MainGroupMeetingsUI = (props: {\n  mainGroupStore: MainGroupStore;\n  user: AppGroupUser;\n}) => {\n  const mainGroupStore = props.mainGroupStore;\n  const currentUser = props.user;\n  const currentUserId = currentUser.userId;\n  const meetingsUi = computeMeetingsUi(\n    mainGroupStore.state.appGroup,\n    currentUserId,\n  );\n\n  return (\n    <Grid container direction=\"column\" spacing={2} justify=\"center\">\n      <Grid item>\n        <Typography>\n          <b>Available</b>\n        </Typography>\n        {_.values(meetingsUi.available).map(user => {\n          return (\n            <UserAvatarNameRow\n              mainGroupStore={mainGroupStore}\n              user={user}\n              isCurrentUser={user.userId === currentUserId}\n              currentUser={mainGroupStore.state.appGroup.userIds[currentUserId]}\n              section=\"available\"\n              showNextMeetingTime={user.userId === currentUserId ? false : true}\n            />\n          );\n        })}\n      </Grid>\n      <Grid item>\n        <ZoomCallsSection\n          mainGroupStore={mainGroupStore}\n          currentUserId={currentUserId}\n          videoMeetings={meetingsUi.video}\n        />\n      </Grid>\n      <Grid item>\n        <GoogleCalendarEventsSection\n          mainGroupStore={mainGroupStore}\n          currentUserId={currentUserId}\n          calendarMeetings={meetingsUi.calendar}\n        />\n      </Grid>\n      <Grid item>\n        <Typography>\n          <b>Offline</b>\n        </Typography>\n        {_.values(meetingsUi.offline).map(user => {\n          return (\n            <UserAvatarNameRow\n              mainGroupStore={mainGroupStore}\n              user={user}\n              isCurrentUser={user.userId === currentUserId}\n              currentUser={mainGroupStore.state.appGroup.userIds[currentUserId]}\n              section=\"offline\"\n              showNextMeetingTime={user.userId === currentUserId ? false : true}\n            />\n          );\n        })}\n      </Grid>\n      <Grid item>\n        <Divider></Divider>\n      </Grid>\n    </Grid>\n  );\n};\n","import {\n  AppGroupEntry,\n  VideoMeeting,\n  CalendarMeeting,\n  AppGroupUser,\n} from \"../../../../sharedTypes/appGroupEntry.d\";\nimport { KEEP_ALIVE_PING_INTERVAL } from \"../MainGroup\";\nimport { getCurrentCalendarEvent } from \"../components/calendarUiUtils\";\nimport _ from \"underscore\";\n\nexport type MeetingUsers = { [userId: string]: AppGroupUser };\nexport type VideoMeetings = {\n  [videoMeetingId: string]: {\n    meeting: VideoMeeting;\n    users: MeetingUsers;\n  };\n};\nexport type CalendarMeetings = {\n  [calendarMeetingId: string]: {\n    meeting: CalendarMeeting;\n    users: MeetingUsers;\n  };\n};\nexport type Meetings = {\n  offline: MeetingUsers;\n  video: VideoMeetings;\n  calendar: CalendarMeetings;\n  available: MeetingUsers;\n  busy: MeetingUsers;\n};\n// lastOnline\n// currentMeeting\n// dailyCalendarEvents\n// Offline:\n//  Date.now() - lastOnline > KEEP_ALIVE_PING_INTERVAL\n// Do not Disturb:\n//  !offline && !videoCall and !calendarEvent && status === busy\n// Available:\n//  !offline && !videoCall and !calendarEvent && status === available\n// Video Calls:\n//  videoCall = !offline && currentMeeting is not null\n// Calendar Events:\n//  calendarEvent = !offline && have event in daily calendar events where startTime is in past and endTime is in future\nexport function computeMeetingsUi(\n  appGroup: AppGroupEntry,\n  currentUserId: string,\n): Meetings {\n  const { [currentUserId]: currentUser, ...restOfUsers } = appGroup.userIds;\n  const sortedUserIds = [currentUser, ..._.values(restOfUsers).sort()];\n\n  const currentTime = Date.now();\n  const offlineUsers: MeetingUsers = sortedUserIds.reduce(\n    (gatheredOfflineUsers, user) => {\n      const userIsOffline =\n        currentTime - user.lastOnline > KEEP_ALIVE_PING_INTERVAL * 1.5;\n      if (userIsOffline) {\n        return {\n          ...gatheredOfflineUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredOfflineUsers;\n      }\n    },\n    {},\n  );\n\n  const videoMeetings: VideoMeetings = sortedUserIds.reduce(\n    (gatheredVideoMeetings, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      if (userIsNotOffline && user.currentMeeting) {\n        const userVideoMeeting = user.currentMeeting;\n        const existingMeeting =\n          gatheredVideoMeetings[userVideoMeeting.meetingId];\n        const existingMeetingUsers = existingMeeting\n          ? existingMeeting.users\n          : {};\n        return {\n          ...gatheredVideoMeetings,\n          [userVideoMeeting.meetingId]: {\n            meeting: userVideoMeeting,\n            users: {\n              ...existingMeetingUsers,\n              [user.userId]: user,\n            },\n          },\n        };\n      } else {\n        return gatheredVideoMeetings;\n      }\n    },\n    {} as VideoMeetings,\n  );\n\n  const calendarMeetings: CalendarMeetings = sortedUserIds.reduce(\n    (gatheredCalendarMeetings, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const currentCalendarEvent = getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      if (userIsNotOffline && !!currentCalendarEvent) {\n        const existingCalendarEvent =\n          gatheredCalendarMeetings[currentCalendarEvent.id];\n        const existingCalendarEventUsers = existingCalendarEvent\n          ? existingCalendarEvent.users\n          : {};\n        return {\n          ...gatheredCalendarMeetings,\n          [currentCalendarEvent.id]: {\n            meeting: currentCalendarEvent,\n            users: {\n              ...existingCalendarEventUsers,\n              [user.userId]: user,\n            },\n          },\n        };\n      } else {\n        return gatheredCalendarMeetings;\n      }\n    },\n    {} as CalendarMeetings,\n  );\n\n  const availableUsers: MeetingUsers = sortedUserIds.reduce(\n    (gatheredAvailableUsers, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const userDoesntHaveCurrentVideoMeeting = !user.currentMeeting;\n      const userDoesntHaveCurrentCalendarEvent = !getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      const userStatusIsAvailable = user.availabilityStatus === \"available\";\n      if (\n        userIsNotOffline &&\n        userDoesntHaveCurrentVideoMeeting &&\n        userDoesntHaveCurrentCalendarEvent &&\n        userStatusIsAvailable\n      ) {\n        return {\n          ...gatheredAvailableUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredAvailableUsers;\n      }\n    },\n    {},\n  );\n\n  const busyUsers: MeetingUsers = sortedUserIds.reduce(\n    (gatheredBusyUsers, user) => {\n      const userIsNotOffline = !offlineUsers[user.userId];\n      const userDoesntHaveCurrentVideoMeeting = !user.currentMeeting;\n      const userDoesntHaveCurrentCalendarEvent = !getCurrentCalendarEvent(\n        user.dailyCalendarEvents,\n      );\n      const userStatusIsBusy = user.availabilityStatus === \"busy\";\n      if (\n        userIsNotOffline &&\n        userDoesntHaveCurrentVideoMeeting &&\n        userDoesntHaveCurrentCalendarEvent &&\n        userStatusIsBusy\n      ) {\n        return {\n          ...gatheredBusyUsers,\n          [user.userId]: user,\n        };\n      } else {\n        return gatheredBusyUsers;\n      }\n    },\n    {},\n  );\n\n  return {\n    offline: offlineUsers,\n    video: videoMeetings,\n    calendar: calendarMeetings,\n    available: availableUsers,\n    busy: busyUsers,\n  };\n}\n","import React, { useContext } from \"react\";\nimport { AppStoreContext } from \"../appStore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Button, Divider, Link } from \"@material-ui/core\";\nimport { MainGroupAppState } from \"../appState\";\nimport { useMainGroupStore } from \"./mainGroupStore\";\nimport { startAppGroupObserver } from \"../appGroupObserver\";\nimport { mainGroupActionCreator } from \"./mainGroupActionCreator\";\nimport { MainGroupHeader } from \"./components/MainGroupHeader\";\nimport { MainGroupFooter } from \"./components/MainGroupFooter\";\nimport { MainGroupMeetingsUI } from \"./components/MainGroupMeetingsUI\";\nimport { ONE_MINUTE } from \"../../scripts/constants/timesInMilliseconds\";\nimport { appGroupsDatabaseAccessor } from \"../../scripts/databaseServices/appGroupsDatabaseAccessor\";\n\nexport const KEEP_ALIVE_PING_INTERVAL = ONE_MINUTE;\n\nexport const MainGroup = (props: { appState: MainGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const mainGroupStore = useMainGroupStore(props.appState.initialAppGroup);\n  React.useEffect(() => {\n    // component mount\n    // sync calendar events\n    mainGroupActionCreator.syncCalendarEvents(\n      props.appState.user.userId,\n      mainGroupStore.state.appGroup.appGroupId,\n    );\n    const calendarSyncInterval = setInterval(() => {\n      mainGroupActionCreator.syncCalendarEvents(\n        props.appState.user.userId,\n        mainGroupStore.state.appGroup.appGroupId,\n      );\n    }, 10 * ONE_MINUTE);\n\n    appGroupsDatabaseAccessor.sendAlivePing(\n      props.appState.user.userId,\n      mainGroupStore.state.appGroup.appGroupId,\n    );\n    const firebaseAlivePingInterval = setInterval(() => {\n      appGroupsDatabaseAccessor.sendAlivePing(\n        props.appState.user.userId,\n        mainGroupStore.state.appGroup.appGroupId,\n      );\n    }, KEEP_ALIVE_PING_INTERVAL);\n\n    // subscribe to appgroup changes\n    const unsubscribe = startAppGroupObserver(\n      mainGroupStore.state.appGroup.appGroupId,\n      mainGroupStore.dispatch,\n    );\n    const meetingsUiUpdateInterval = setInterval(() => {\n      mainGroupStore.dispatch({\n        type: \"CHECK_FOR_MEETINGS_UI_UPDATE\",\n      });\n    }, 10 * 1000);\n    return () => {\n      clearInterval(calendarSyncInterval);\n      clearInterval(firebaseAlivePingInterval);\n      unsubscribe();\n      clearInterval(meetingsUiUpdateInterval);\n    };\n  }, []);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"flex-start\"\n      spacing={2}\n    >\n      {props.appState.popupsBlocked && (\n        <Grid item style={{ width: \"100%\" }}>\n          <Typography color=\"error\">\n            Please \"Always allow popups\" in order to receive video calls.\n          </Typography>\n        </Grid>\n      )}\n      <Grid item style={{ width: \"100%\" }}>\n        <MainGroupHeader\n          mainGroupStore={mainGroupStore}\n          user={\n            mainGroupStore.state.appGroup.userIds[props.appState.user.userId]\n          }\n        />\n      </Grid>\n      <Grid item style={{ width: \"100%\" }}>\n        <MainGroupMeetingsUI\n          mainGroupStore={mainGroupStore}\n          user={\n            mainGroupStore.state.appGroup.userIds[props.appState.user.userId]\n          }\n        />\n      </Grid>\n      <Grid item style={{ width: \"100%\" }}>\n        <MainGroupFooter\n          appStore={appStore}\n          mainGroupStore={mainGroupStore}\n          user={props.appState.user}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","export const ONE_MINUTE = 60 * 1000;\n\nexport const ONE_HOUR = 60 * ONE_MINUTE;\n","import { AppGroupEntry } from \"./../../sharedTypes/appGroupEntry.d\";\nimport { MainGroupAction } from \"./MainGroup/mainGroupAction.d\";\nimport { appGroupsDatabaseAccessor } from \"./../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport { Dispatch } from \"react\";\n\nexport function startAppGroupObserver(\n  appGroupdId: string,\n  dispatch: Dispatch<MainGroupAction>,\n) {\n  const unsubscribe = appGroupsDatabaseAccessor.watchAppGroup(\n    appGroupdId,\n    (appGroup: AppGroupEntry) => {\n      dispatch({\n        type: \"UPDATE_APP_GROUP\",\n        newAppGroup: appGroup,\n      });\n    },\n  );\n  return unsubscribe;\n}\n","export const environment = () => {\n  const dev = {\n    CLOUD_FUNCTION_ENDPOINT: \"http://localhost:8080\",\n  };\n  const production = {\n    CLOUD_FUNCTION_ENDPOINT:\n      \"https://us-central1-project-coco-production.cloudfunctions.net\",\n  };\n  switch (window.location.host) {\n    case \"localhost:3006\":\n      return dev;\n    case \"pearcoco.com\":\n      return production;\n    default:\n      throw new Error(`unknown window host:${window.location.host}`);\n  }\n};\n","import { windowUtils } from \"../utils/windowUtils\";\nimport { environment } from \"../environment/environment\";\n\nlet loggedIn: Promise<string> = new Promise((resolve, _reject) => {\n  if (windowUtils.getUrlParam(\"logged_in\")) {\n    window.history.pushState(\n      {},\n      document.title,\n      windowUtils.removeUrlParam(\"logged_in\"),\n    );\n    resolve();\n  } else {\n    window.location.href = `${\n      environment().CLOUD_FUNCTION_ENDPOINT\n    }/zoomGetTokenData?redirectUrl=${window.location.href}`;\n  }\n});\n\nexport const zoomAuth = {\n  authorizeZoom: async (): Promise<void> => {\n    await loggedIn;\n  },\n};\n","import { LoginUserSuccessResult } from \"../../../sharedTypes/loginUserSuccessResult\";\nimport { zoomAuth } from \"../zoom/zoomAuth\";\nimport { environment } from \"../environment/environment\";\nimport { config } from \"../config/config\";\n\nexport async function login() {\n  await zoomAuth.authorizeZoom();\n  const response = await fetch(\n    environment().CLOUD_FUNCTION_ENDPOINT + `/loginUser`,\n    {\n      credentials: \"include\",\n    },\n  );\n  const responseJson: LoginUserSuccessResult = await response.json();\n  return responseJson;\n}\n","import { AppGroupEntry } from \"./../../sharedTypes/appGroupEntry.d\";\nimport { AppAction } from \"./appActions\";\nimport { usersDatabaseAccessor } from \"./../scripts/databaseServices/usersDatabaseAccessor\";\nimport { Dispatch } from \"react\";\nimport { UserEntry } from \"../../sharedTypes/userEntry\";\n\nexport function startUserObserver(\n  userId: string,\n  dispatch: Dispatch<AppAction>,\n) {\n  const unsubscribe = usersDatabaseAccessor.watchUser(\n    userId,\n    (user: UserEntry) => {\n      dispatch({\n        type: \"UPDATE_USER\",\n        newUser: user,\n      });\n    },\n  );\n  return unsubscribe;\n}\n","import React from \"react\";\nimport { Loading } from \"./Loading/Loading\";\nimport { AppStoreContext, useAppStore, AppStore } from \"./appStore\";\nimport { AppAction } from \"./appActions\";\nimport { JoinGroup } from \"./JoinGroup/JoinGroup\";\nimport { MainGroup } from \"./MainGroup/MainGroup\";\nimport { zoomApi } from \"../scripts/zoom/zoomApi\";\nimport { login } from \"../scripts/login/login\";\nimport { initializeFirestore } from \"../scripts/firestore/firestoreInitialize\";\nimport { usersDatabaseAccessor } from \"../scripts/databaseServices/usersDatabaseAccessor\";\nimport { appGroupsDatabaseAccessor } from \"../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport { setConfig } from \"../scripts/config/config\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport { startUserObserver } from \"./appUserObserver\";\nimport { windowUtils } from \"../scripts/utils/windowUtils\";\nimport { Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { databaseService } from \"../scripts/databaseServices/databaseService\";\n\nasync function initializeApp(appStore: AppStore) {\n  const userAndCustomToken = await login();\n  setConfig(userAndCustomToken.config);\n  await initializeFirestore(userAndCustomToken.customToken);\n  const user = await usersDatabaseAccessor.findOrCreateUser(\n    userAndCustomToken.user,\n  );\n  const windowJoinId = windowUtils.getUrlParam(\"joinId\");\n  const appGroup = user.groupId\n    ? await appGroupsDatabaseAccessor.getAppGroup(user.groupId)\n    : windowJoinId\n    ? await databaseService.userTryJoinGroup(user, windowJoinId)\n    : null;\n  startUserObserver(user.userId, appStore.dispatch);\n  if (appGroup) {\n    appGroupsDatabaseAccessor.updateUser(user, appGroup.appGroupId);\n    const newestUserVersion = await usersDatabaseAccessor.findOrCreateUser(\n      userAndCustomToken.user,\n    );\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: {\n        view: \"mainGroup\",\n        user: newestUserVersion,\n        initialAppGroup: appGroup,\n        popupsBlocked: windowUtils.testPopupsBlocked(),\n      },\n    });\n  } else {\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: { view: \"joinGroup\", user },\n    });\n  }\n}\n\nexport const App: React.FC = () => {\n  return (\n    <Container maxWidth=\"xs\" style={{ marginTop: \"2em\" }}>\n      <BrowserRouter>\n        <div>\n          <Route path=\"/\" component={AppContent} />\n        </div>\n      </BrowserRouter>\n    </Container>\n  );\n};\n\nexport const AppContent: React.FC = () => {\n  const appStore = useAppStore();\n  switch (appStore.state.view) {\n    case \"initial\":\n      initializeApp(appStore);\n      return <Loading />;\n    case \"loading\":\n      return <Loading />;\n    case \"joinGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <JoinGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    case \"mainGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <MainGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    default:\n      const _: never = appStore.state;\n      throw new Error(`unknown state view`);\n  }\n};\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"typeface-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline></CssBaseline>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}