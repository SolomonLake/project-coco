{"version":3,"sources":["components/Loading/Loading.tsx","components/appStore.ts","components/JoinGroup/joinGroupStore.ts","scripts/firestore/firestoreInitialize.ts","scripts/firestore/firestoreApi.ts","scripts/utils/generateUtils.ts","scripts/databaseServices/appGroupsDatabaseAccessor.ts","scripts/databaseServices/usersDatabaseAccessor.ts","scripts/databaseServices/databaseService.ts","components/JoinGroup/JoinGroup.tsx","components/MainGroup/mainGroupStore.ts","components/MainGroup/MainGroup.tsx","scripts/zoom/zoomAuth.ts","components/appGroupObserver.ts","scripts/utils/windowUtils.ts","environments/config.ts","scripts/login/login.ts","components/App.tsx","theme.ts","index.tsx"],"names":["Loading","Typography","initialState","view","reducer","state","action","console","log","type","newState","newAppState","AppStoreContext","React","createContext","joinId","newJoinId","firestoreDb","_firestoreDb","Error","initializeFirestore","customToken","a","firebase","initializeApp","apiKey","authDomain","projectId","auth","signInWithCustomToken","catch","error","code","message","firestore","firestoreApiFactory","collection","get","documentPath","docRef","doc","exists","data","set","entry","update","delete","watch","callback","onSnapshot","generateRandomString","n","possible","text","i","charAt","Math","floor","random","length","appGroupsDatabaseApi","appGroupsDatabaseAccessor","watchAppGroup","appGroupId","getAppGroup","getExistingAppGroup","existingGroup","deleteAppGroup","createAppGroup","appGroup","createNewAppGroup","firstUser","newAppGroup","userIds","userId","availabilityStatus","currentMeeting","dailyCalendarEvents","userJoinExistingAppGroup","user","groupId","updateGroupAccessor","removeUserFromAppGroup","FieldValue","usersDatabaseApi","usersDatabaseAccessor","getUser","createUser","findOrCreateUser","id","existingUser","userEntry","displayName","first_name","last_name","personalMeetingUrl","personal_meeting_url","updateGroup","databaseService","createGroup","newGroup","userTryJoinGroup","group","userLeaveGroup","_","values","JoinGroup","props","appStore","useContext","joinGroupStore","useReducer","dispatch","useJoinGroupStore","Grid","container","direction","justify","alignItems","spacing","item","TextField","label","margin","variant","value","onChange","e","target","Button","color","onClick","appState","initialAppGroup","Divider","cachedZoomTokenData","MainGroup","mainGroupStore","useMainGroupStore","useEffect","appGroupdId","unsubscribe","JSON","stringify","windowUtils","urlParamKey","regExp","RegExp","matchArray","decodeURIComponent","window","location","search","match","replace","config","host","CLOUD_FUNCTION_ENDPOINT","zoomAuth","initialize","Promise","resolve","_reject","tokenDataString","tokenData","parse","history","pushState","document","title","origin","pathname","href","getToken","login","fetch","encodeURIComponent","response","json","responseJson","userAndCustomToken","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","useAppStore","Provider","getElementById"],"mappings":"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","file":"static/js/main.775c9330.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Loading = () => {\n  return <Typography>Loading</Typography>;\n};\n","import { AppAction } from \"./appActions\";\nimport { AppState } from \"./appState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type AppStore = {\n  state: AppState;\n  dispatch: Dispatch<AppAction>;\n};\n\nconst initialState: AppState = { view: \"initial\" };\n\nfunction reducer(state: AppState, action: AppAction) {\n  console.log(\"appStoreReducer previous state:\", state);\n  console.log(\"appStoreReducer\", action);\n  switch (action.type) {\n    case \"TRANSITION_APP_STATE\": {\n      return logState(action.newAppState);\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: AppState) {\n  console.log(\"appStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const AppStoreContext = React.createContext<AppStore>(null as any);\n\nexport function useAppStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","import { JoinGroupAction } from \"./joinGroupAction\";\nimport { JoinGroupState } from \"./joinGroupState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type JoinGroupStore = {\n  state: JoinGroupState;\n  dispatch: Dispatch<JoinGroupAction>;\n};\n\nconst initialState: JoinGroupState = { joinId: \"\" };\n\nfunction reducer(state: JoinGroupState, action: JoinGroupAction) {\n  console.log(\"joinGroupStoreReducer previous state:\", state);\n  console.log(\"joinGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_JOIN_ID\": {\n      return logState({\n        ...state,\n        joinId: action.newJoinId,\n      });\n      break;\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: JoinGroupState) {\n  console.log(\"joinGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const JoinGroupStoreContext = React.createContext<JoinGroupStore>(\n  null as any,\n);\n\nexport function useJoinGroupStore() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n}\n","import firebase from \"firebase\";\n// Required for side-effects\nimport \"firebase/firestore\";\n\nexport function firestoreDb() {\n  if (_firestoreDb) {\n    return _firestoreDb;\n  } else {\n    throw new Error(\"firestoreDb not initialized\");\n  }\n}\n\nexport async function initializeFirestore(customToken: string) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyD-Lhms0AxUKDuyccRdicHf6xUCIT-vB0A\",\n    authDomain: \"project-coco-251813.firebaseapp.com\",\n    projectId: \"project-coco-251813\",\n  });\n  await firebase\n    .auth()\n    .signInWithCustomToken(customToken)\n    .catch(function(error) {\n      const { code, message } = error;\n      console.log(\"firestoreInitialize error\", code, message);\n      throw error;\n    });\n\n  _firestoreDb = firebase.firestore();\n}\n\nlet _firestoreDb: firebase.firestore.Firestore | null = null;\n","import { firestoreDb } from \"./firestoreInitialize\";\nimport { DatabaseCollection } from \"../databaseServices/databaseTypes\";\nimport { async } from \"q\";\n\nexport const firestoreApiFactory = <T extends {}>(\n  collection: DatabaseCollection,\n) => {\n  return {\n    get: async (documentPath: string): Promise<T | null> => {\n      const docRef = firestoreDb()\n        .collection(collection)\n        .doc(documentPath);\n\n      const doc = await docRef.get();\n      if (doc.exists) {\n        return doc.data() as T;\n      } else {\n        return null;\n      }\n    },\n    set: async (documentPath: string, entry: T): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .set(entry);\n    },\n    update: async (\n      documentPath: string,\n      entry: Partial<T | {}>,\n    ): Promise<void> => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .update(entry);\n    },\n    delete: async (documentPath: string) => {\n      await firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .delete();\n    },\n    watch: (documentPath: string, callback: (entry: T) => void) => {\n      return firestoreDb()\n        .collection(collection)\n        .doc(documentPath)\n        .onSnapshot(doc => {\n          callback(doc.data() as T);\n        });\n    },\n  };\n};\n","//from http://stackoverflow.com/a/1349426/439317\nexport function generateRandomString(n: number, possible: string) {\n  var text = \"\";\n  for (var i = 0; i < n; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\nexport function generateRandomAlphaNumericString(n: number) {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomUrlCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz\";\n  return generateRandomString(n, possible);\n}\nexport function generateRandomLetterNumericCode(n: number) {\n  const possible = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  return generateRandomString(n, possible);\n}\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript?page=1&tab=votes#tab-top\nexport function uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { UserEntry } from \"./../../../sharedTypes/userEntry.d\";\nimport { AppGroupEntry } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport firebase from \"firebase\";\nimport { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { generateRandomAlphaNumericString } from \"../utils/generateUtils\";\n\nconst appGroupsDatabaseApi = firestoreApiFactory<AppGroupEntry>(\"appGroups\");\n\nexport const appGroupsDatabaseAccessor = {\n  watchAppGroup: (\n    appGroupId: string,\n    callback: (appGroup: AppGroupEntry) => void,\n  ) => {\n    return appGroupsDatabaseApi.watch(appGroupId, callback);\n  },\n  getAppGroup: async (appGroupId: string): Promise<AppGroupEntry | null> => {\n    return await appGroupsDatabaseApi.get(appGroupId);\n  },\n  getExistingAppGroup: async (appGroupId: string): Promise<AppGroupEntry> => {\n    const existingGroup = await appGroupsDatabaseApi.get(appGroupId);\n    if (existingGroup) {\n      return existingGroup;\n    } else {\n      throw new Error(\n        \"getExistingAppGroup: group doesn't exist with id:\" + appGroupId,\n      );\n    }\n  },\n  deleteAppGroup: async (appGroupId: string) => {\n    return await appGroupsDatabaseApi.delete(appGroupId);\n  },\n  createAppGroup: async (appGroup: AppGroupEntry) => {\n    return await appGroupsDatabaseApi.set(appGroup.appGroupId, appGroup);\n  },\n  createNewAppGroup: async (firstUser: UserEntry) => {\n    const newAppGroup: AppGroupEntry = {\n      appGroupId: \"g\" + generateRandomAlphaNumericString(5),\n      userIds: {\n        [firstUser.userId]: {\n          userId: firstUser.userId,\n          availabilityStatus: \"available\",\n          currentMeeting: null,\n          dailyCalendarEvents: {},\n        },\n      },\n    };\n    await appGroupsDatabaseApi.set(newAppGroup.appGroupId, newAppGroup);\n    return newAppGroup;\n  },\n  userJoinExistingAppGroup: async (user: UserEntry, groupId: string) => {\n    const updateGroupAccessor = {\n      [`userIds.${user.userId}`]: {\n        userId: user.userId,\n        availabilityStatus: \"available\",\n        currentMeeting: null,\n        dailyCalendarEvents: {},\n      },\n    };\n    appGroupsDatabaseApi.update(groupId, updateGroupAccessor);\n    return appGroupsDatabaseAccessor.getExistingAppGroup(groupId);\n  },\n  removeUserFromAppGroup: async (appGroup: AppGroupEntry, user: UserEntry) => {\n    await appGroupsDatabaseApi.update(appGroup.appGroupId, {\n      [`userIds.${user.userId}`]: firebase.firestore.FieldValue.delete(),\n    });\n  },\n};\n","import { firestoreApiFactory } from \"../firestore/firestoreApi\";\nimport { ZoomUser } from \"../../../sharedTypes/zoomTypes\";\nimport { UserEntry } from \"../../../sharedTypes/userEntry\";\n\nconst usersDatabaseApi = firestoreApiFactory<UserEntry>(\"users\");\n\nexport const usersDatabaseAccessor = {\n  getUser: async (userId: string): Promise<UserEntry | null> => {\n    return await usersDatabaseApi.get(userId);\n  },\n  createUser: async (user: UserEntry) => {\n    return await usersDatabaseApi.set(user.userId, user);\n  },\n  findOrCreateUser: async (user: ZoomUser): Promise<UserEntry> => {\n    const existingUser = await usersDatabaseAccessor.getUser(user.id);\n    if (existingUser) {\n      return existingUser;\n    } else {\n      const userEntry = {\n        userId: user.id,\n        groupId: null,\n        displayName: user.first_name + \" \" + user.last_name,\n        personalMeetingUrl: user.personal_meeting_url,\n      };\n      await usersDatabaseApi.set(userEntry.userId, userEntry);\n      return userEntry;\n    }\n  },\n  updateGroup: async (userId: string, groupId: string | null) => {\n    await usersDatabaseApi.update(userId, { groupId });\n  },\n};\n","import { AppGroupEntry } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { appGroupsDatabaseAccessor } from \"./appGroupsDatabaseAccessor\";\nimport { usersDatabaseAccessor } from \"./usersDatabaseAccessor\";\nimport _ from \"underscore\";\nimport { UserEntry } from \"../../../sharedTypes/userEntry\";\n\nexport const databaseService = {\n  createGroup: async (user: UserEntry): Promise<AppGroupEntry> => {\n    const newGroup = await appGroupsDatabaseAccessor.createNewAppGroup(user);\n    await usersDatabaseAccessor.updateGroup(user.userId, newGroup.appGroupId);\n    return newGroup;\n  },\n  userTryJoinGroup: async (\n    user: UserEntry,\n    groupId: string,\n  ): Promise<AppGroupEntry | null> => {\n    const existingGroup = await appGroupsDatabaseAccessor.getAppGroup(groupId);\n    if (existingGroup) {\n      const group = await appGroupsDatabaseAccessor.userJoinExistingAppGroup(\n        user,\n        groupId,\n      );\n      await usersDatabaseAccessor.updateGroup(user.userId, groupId);\n      return group;\n    } else {\n      return null;\n    }\n  },\n  userLeaveGroup: async (user: UserEntry, appGroup: AppGroupEntry) => {\n    await usersDatabaseAccessor.updateGroup(user.userId, null);\n    await appGroupsDatabaseAccessor.removeUserFromAppGroup(appGroup, user);\n    const group = await appGroupsDatabaseAccessor.getAppGroup(\n      appGroup.appGroupId,\n    );\n    if (group && group.userIds && _.values(group.userIds).length === 0) {\n      // no users left in group\n      await appGroupsDatabaseAccessor.deleteAppGroup(group.appGroupId);\n    }\n  },\n};\n","import React, { useContext } from \"react\";\nimport logo from \"../../svgs/logo.svg\";\nimport { AppStoreContext } from \"../appStore\";\nimport { useJoinGroupStore } from \"./joinGroupStore\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { databaseService } from \"../../scripts/databaseServices/databaseService\";\nimport { JoinGroupAppState } from \"../appState\";\n\nexport const JoinGroup = (props: { appState: JoinGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const joinGroupStore = useJoinGroupStore();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <TextField\n              label=\"Group Id\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={joinGroupStore.state.joinId}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                joinGroupStore.dispatch({\n                  type: \"UPDATE_JOIN_ID\",\n                  newJoinId: e.target.value,\n                });\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                appStore.dispatch({\n                  type: \"TRANSITION_APP_STATE\",\n                  newAppState: { view: \"loading\" },\n                });\n                const group = await databaseService.userTryJoinGroup(\n                  props.appState.user,\n                  joinGroupStore.state.joinId,\n                );\n                if (group) {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: {\n                      view: \"mainGroup\",\n                      user: {\n                        ...props.appState.user,\n                        groupId: group.appGroupId,\n                      },\n                      initialAppGroup: group,\n                    },\n                  });\n                } else {\n                  appStore.dispatch({\n                    type: \"TRANSITION_APP_STATE\",\n                    newAppState: props.appState,\n                  });\n                  // group doesn't exist effect\n                  console.log(\"group doesn't exist\");\n                }\n              }}\n            >\n              Join\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={async () => {\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: { view: \"loading\" },\n            });\n            const group = await databaseService.createGroup(\n              props.appState.user,\n            );\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: {\n                view: \"mainGroup\",\n                user: { ...props.appState.user, groupId: group.appGroupId },\n                initialAppGroup: group,\n              },\n            });\n          }}\n        >\n          Create Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import { AppGroupEntry } from \"./../../../sharedTypes/appGroupEntry.d\";\nimport { MainGroupAction } from \"./mainGroupAction\";\nimport { MainGroupState } from \"./mainGroupState\";\nimport React, { Dispatch, useReducer } from \"react\";\n\nexport type MainGroupStore = {\n  state: MainGroupState;\n  dispatch: Dispatch<MainGroupAction>;\n};\n\nfunction reducer(state: MainGroupState, action: MainGroupAction) {\n  console.log(\"mainGroupStoreReducer previous state:\", state);\n  console.log(\"mainGroupStoreReducer\", action);\n  switch (action.type) {\n    case \"UPDATE_APP_GROUP\": {\n      return logState({\n        ...state,\n        appGroup: action.newAppGroup,\n      });\n      break;\n    }\n    default: {\n      const _: never = action.type;\n      return state;\n    }\n  }\n}\nfunction logState(newState: MainGroupState) {\n  console.log(\"mainGroupStoreReducer computed state\", newState);\n  return newState;\n}\n\n// Container\nexport const MainGroupStoreContext = React.createContext<MainGroupStore>(\n  null as any,\n);\n\nexport function useMainGroupStore(appGroup: AppGroupEntry) {\n  const [state, dispatch] = useReducer(reducer, { appGroup });\n  return { state, dispatch };\n}\n","import React, { useContext } from \"react\";\nimport { AppStoreContext } from \"../appStore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { MainGroupAppState } from \"../appState\";\nimport { databaseService } from \"../../scripts/databaseServices/databaseService\";\nimport { useMainGroupStore } from \"./mainGroupStore\";\nimport { startAppGroupObserver } from \"../appGroupObserver\";\n\nexport const MainGroup = (props: { appState: MainGroupAppState }) => {\n  const appStore = useContext(AppStoreContext);\n  const mainGroupStore = useMainGroupStore(props.appState.initialAppGroup);\n  React.useEffect(() => {\n    const unsubscribe = startAppGroupObserver(\n      mainGroupStore.state.appGroup.appGroupId,\n      mainGroupStore.dispatch,\n    );\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Typography>\n          GroupId: {mainGroupStore.state.appGroup.appGroupId}\n        </Typography>\n        <pre>{JSON.stringify(mainGroupStore.state.appGroup, null, 2)}</pre>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={async () => {\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: { view: \"loading\" },\n            });\n            await databaseService.userLeaveGroup(\n              props.appState.user,\n              mainGroupStore.state.appGroup,\n            );\n            appStore.dispatch({\n              type: \"TRANSITION_APP_STATE\",\n              newAppState: {\n                view: \"joinGroup\",\n                user: { ...props.appState.user, groupId: null },\n              },\n            });\n          }}\n        >\n          Leave Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import { CachedZoomTokenData } from \"../../../sharedTypes/zoomTypes\";\nimport { windowUtils } from \"../utils/windowUtils\";\nimport { config } from \"../../environments/config\";\n\nexport const zoomAuth = {\n  initialize: (): Promise<CachedZoomTokenData> => {\n    cachedZoomTokenData = new Promise((resolve, _reject) => {\n      const tokenDataString = windowUtils.getUrlParam(\"zoom_token_data\");\n      if (tokenDataString) {\n        const tokenData: CachedZoomTokenData = JSON.parse(\n          decodeURIComponent(tokenDataString),\n        );\n        window.history.pushState(\n          {},\n          document.title,\n          window.location.origin + window.location.pathname,\n        );\n        resolve(tokenData);\n      } else {\n        window.location.href =\n          config().CLOUD_FUNCTION_ENDPOINT + \"/zoomGetTokenData\";\n      }\n    });\n    return cachedZoomTokenData;\n  },\n  getToken: (): Promise<CachedZoomTokenData> => {\n    if (cachedZoomTokenData) {\n      return cachedZoomTokenData;\n    } else {\n      return zoomAuth.initialize();\n    }\n  },\n};\n\nlet cachedZoomTokenData: Promise<CachedZoomTokenData> | null;\n","import { AppGroupEntry } from \"./../../sharedTypes/appGroupEntry.d\";\nimport { MainGroupAction } from \"./MainGroup/mainGroupAction.d\";\nimport { appGroupsDatabaseAccessor } from \"./../scripts/databaseServices/appGroupsDatabaseAccessor\";\nimport { Dispatch } from \"react\";\n\nexport function startAppGroupObserver(\n  appGroupdId: string,\n  dispatch: Dispatch<MainGroupAction>,\n) {\n  const unsubscribe = appGroupsDatabaseAccessor.watchAppGroup(\n    appGroupdId,\n    (appGroup: AppGroupEntry) => {\n      dispatch({\n        type: \"UPDATE_APP_GROUP\",\n        newAppGroup: appGroup,\n      });\n    },\n  );\n  return unsubscribe;\n}\n","export const windowUtils = {\n  getUrlParam: (urlParamKey: string): string | null => {\n    const regExp = new RegExp(urlParamKey + \"=(.*?)($|&)\", \"g\");\n    const decodedWindowLocation = decodeURIComponent(window.location.search);\n    const matchArray = decodedWindowLocation.match(regExp);\n    if (matchArray && matchArray.length) {\n      const firstMatch = matchArray[0];\n      return firstMatch.replace(urlParamKey + \"=\", \"\").replace(\"&\", \"\");\n    } else {\n      return null;\n    }\n  },\n};\n","export const config = () => {\n  const dev = {\n    CLOUD_FUNCTION_ENDPOINT: \"http://localhost:8080\",\n  };\n  const production = {\n    CLOUD_FUNCTION_ENDPOINT:\n      \"https://us-central1-project-coco-251813.cloudfunctions.net\",\n  };\n  switch (window.location.host) {\n    case \"localhost:3006\":\n      return dev;\n    case \"solomonlake.github.io\":\n      return production;\n    default:\n      throw new Error(`unknown window host:${window.location.host}`);\n  }\n};\n","import { LoginUserSuccessResult } from \"../../../sharedTypes/loginUserSuccessResult\";\nimport { zoomAuth } from \"../zoom/zoomAuth\";\nimport { config } from \"../../environments/config\";\n\nexport async function login() {\n  const tokenData = await zoomAuth.getToken();\n  const response = await fetch(\n    config().CLOUD_FUNCTION_ENDPOINT +\n      `/loginUser?zoomTokenData=${encodeURIComponent(\n        JSON.stringify(tokenData),\n      )}`,\n  );\n  const responseJson: LoginUserSuccessResult = await response.json();\n  console.log(\"response\", responseJson);\n  return responseJson;\n}\n","import React from \"react\";\nimport { Loading } from \"./Loading/Loading\";\nimport { AppStoreContext, useAppStore, AppStore } from \"./appStore\";\nimport { AppAction } from \"./appActions\";\nimport { JoinGroup } from \"./JoinGroup/JoinGroup\";\nimport { MainGroup } from \"./MainGroup/MainGroup\";\nimport { zoomApi } from \"../scripts/zoom/zoomApi\";\nimport { zoomAuth } from \"../scripts/zoom/zoomAuth\";\nimport { login } from \"../scripts/login/login\";\nimport { initializeFirestore } from \"../scripts/firestore/firestoreInitialize\";\nimport { usersDatabaseAccessor } from \"../scripts/databaseServices/usersDatabaseAccessor\";\nimport { appGroupsDatabaseAccessor } from \"../scripts/databaseServices/appGroupsDatabaseAccessor\";\n\nasync function initializeApp(appStore: AppStore) {\n  zoomAuth.initialize();\n  const userAndCustomToken = await login();\n  await initializeFirestore(userAndCustomToken.customToken);\n  const user = await usersDatabaseAccessor.findOrCreateUser(\n    userAndCustomToken.user,\n  );\n  const appGroup = user.groupId\n    ? await appGroupsDatabaseAccessor.getAppGroup(user.groupId)\n    : null;\n  if (user.groupId && appGroup) {\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: { view: \"mainGroup\", user, initialAppGroup: appGroup },\n    });\n  } else {\n    appStore.dispatch({\n      type: \"TRANSITION_APP_STATE\",\n      newAppState: { view: \"joinGroup\", user },\n    });\n  }\n}\n\nexport const App: React.FC = () => {\n  const appStore = useAppStore();\n  switch (appStore.state.view) {\n    case \"initial\":\n      initializeApp(appStore);\n      return <Loading />;\n    case \"loading\":\n      return <Loading />;\n    case \"joinGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <JoinGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    case \"mainGroup\":\n      return (\n        <AppStoreContext.Provider value={appStore}>\n          <MainGroup appState={appStore.state} />\n        </AppStoreContext.Provider>\n      );\n    default:\n      const _: never = appStore.state;\n      throw new Error(`unknown state view`);\n  }\n};\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"typeface-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\nimport { config } from \"./environments/config\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline></CssBaseline>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}